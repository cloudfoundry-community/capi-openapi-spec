paths:
  /v3/apps:
    get:
      summary: List apps
      description: Retrieve a paginated list of apps the user has access to
      operationId: listApps
      tags:
        - apps
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: order_by
          in: query
          description: Field to sort results by
          required: false
          schema:
            type: string
            enum: [created_at, updated_at, name, state, -created_at, -updated_at, -name, -state]
        - name: names
          in: query
          description: Filter by app names (comma-separated)
          required: false
          schema:
            type: string
            example: "app1,app2"
        - name: guids
          in: query
          description: Filter by app GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: organization_guids
          in: query
          description: Filter by organization GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: space_guids
          in: query
          description: Filter by space GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: stacks
          in: query
          description: Filter by stack names (comma-separated)
          required: false
          schema:
            type: string
        - name: states
          in: query
          description: Filter by app states (comma-separated)
          required: false
          schema:
            type: string
            example: "STARTED,STOPPED"
        - name: include
          in: query
          description: Include related resources
          required: false
          schema:
            type: string
            enum: [space, space.organization]
        - name: lifecycle_type
          in: query
          description: Filter by lifecycle type
          required: false
          schema:
            type: string
            enum: [buildpack, cnb, docker]
        - name: label_selector
          in: query
          description: Filter by labels using label selector syntax
          required: false
          schema:
            type: string
            example: "environment=production,tier!=backend"
        - name: created_ats
          in: query
          description: |
            Filter by creation timestamp. Supports multiple formats:
            - Range: created_ats=2020-01-01T00:00:00Z,2020-12-31T23:59:59Z
            - Greater than: created_ats[gt]=2020-01-01T00:00:00Z
            - Greater than or equal: created_ats[gte]=2020-01-01T00:00:00Z
            - Less than: created_ats[lt]=2020-12-31T23:59:59Z
            - Less than or equal: created_ats[lte]=2020-12-31T23:59:59Z
          required: false
          schema:
            type: string
            example: "created_ats[gte]=2020-01-01T00:00:00Z"
        - name: updated_ats
          in: query
          description: |
            Filter by update timestamp. Supports multiple formats:
            - Range: updated_ats=2020-01-01T00:00:00Z,2020-12-31T23:59:59Z
            - Greater than: updated_ats[gt]=2020-01-01T00:00:00Z
            - Greater than or equal: updated_ats[gte]=2020-01-01T00:00:00Z
            - Less than: updated_ats[lt]=2020-12-31T23:59:59Z
            - Less than or equal: updated_ats[lte]=2020-12-31T23:59:59Z
          required: false
          schema:
            type: string
        - name: fields
          in: query
          description: |
            Fields to include in the response. Use dot notation for nested fields.
            Example: fields[apps]=name,guid,state or fields[space]=name,guid
          required: false
          schema:
            type: string
            example: "fields[apps]=name,guid,state"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/App'
                  included:
                    type: object
                    properties:
                      spaces:
                        type: array
                        items:
                          $ref: '#/components/schemas/Space'
                      organizations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Organization'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

    post:
      summary: Create an app
      description: Create a new application in the specified space
      operationId: createApp
      tags:
        - apps
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - relationships
              properties:
                name:
                  type: string
                  description: Name of the app (unique within space)
                  minLength: 1
                  maxLength: 255
                state:
                  type: string
                  enum: [STARTED, STOPPED]
                  default: STOPPED
                  description: Initial desired state of the app
                lifecycle:
                  type: object
                  description: App lifecycle configuration
                  properties:
                    type:
                      type: string
                      enum: [buildpack, cnb, docker]
                      description: Type of app lifecycle
                    data:
                      type: object
                      properties:
                        buildpacks:
                          type: array
                          description: List of buildpacks for buildpack/cnb lifecycle
                          items:
                            type: string
                        stack:
                          type: string
                          description: Stack to use for buildpack lifecycle
                environment_variables:
                  type: object
                  description: Environment variables for the app
                  additionalProperties:
                    type: string
                relationships:
                  type: object
                  required:
                    - space
                  properties:
                    space:
                      type: object
                      required:
                        - data
                      properties:
                        data:
                          type: object
                          required:
                            - guid
                          properties:
                            guid:
                              type: string
                              format: uuid
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      description: Key-value pairs for labeling and filtering
                      additionalProperties:
                        type: string
                        maxLength: 63
                    annotations:
                      type: object
                      description: Key-value pairs for storing metadata
                      additionalProperties:
                        type: string
                        maxLength: 5000
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}:
    get:
      summary: Get an app
      description: Retrieve details of a specific app
      operationId: getApp
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
        - name: include
          in: query
          description: Include related resources
          required: false
          schema:
            type: string
            enum: [space, space.organization]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

    patch:
      summary: Update an app
      description: Update an existing app's configuration
      operationId: updateApp
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: New name for the app
                  minLength: 1
                  maxLength: 255
                state:
                  type: string
                  enum: [STARTED, STOPPED]
                  description: Desired state of the app
                lifecycle:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [buildpack, cnb, docker]
                    data:
                      type: object
                      properties:
                        buildpacks:
                          type: array
                          items:
                            type: string
                        stack:
                          type: string
                environment_variables:
                  type: object
                  additionalProperties:
                    type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                        maxLength: 63
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                        maxLength: 5000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

    delete:
      summary: Delete an app
      description: Delete an app and all associated resources
      operationId: deleteApp
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/actions/start:
    post:
      summary: Start an app
      description: Start an app that is in the STOPPED state
      operationId: startApp
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/actions/stop:
    post:
      summary: Stop an app
      description: Stop an app that is in the STARTED state
      operationId: stopApp
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/actions/restart:
    post:
      summary: Restart an app
      description: Stop and start an app to pick up configuration changes
      operationId: restartApp
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/actions/clear_buildpack_cache:
    post:
      summary: Clear buildpack cache
      description: Clear the buildpack cache for an app
      operationId: clearAppBuildpackCache
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/manifest_diff:
    post:
      summary: Generate manifest diff (experimental)
      description: Compare provided manifest with current app configuration. This is an experimental endpoint.
      tags:
        - apps
        - experimental
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              type: string
              description: YAML manifest content
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  diff:
                    type: array
                    items:
                      type: object
                      properties:
                        op:
                          type: string
                          enum: [add, remove, replace]
                        path:
                          type: string
                        value:
                          type: object
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []
      x-experimental: true

  /v3/apps/{guid}/environment_variables:
    get:
      summary: Get app environment variables
      description: Retrieve environment variables for an app
      operationId: getAppEnvironmentVariables
      tags:
        - apps
        - configuration
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  var:
                    type: object
                    description: User-provided environment variables
                    additionalProperties:
                      type: string
                  links:
                    type: object
                    properties:
                      self:
                        $ref: '#/components/schemas/Link'
                      app:
                        $ref: '#/components/schemas/Link'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

    patch:
      summary: Update app environment variables
      description: Update environment variables for an app
      operationId: updateAppEnvironmentVariables
      tags:
        - apps
        - configuration
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                var:
                  type: object
                  description: Environment variables to set
                  additionalProperties:
                    type: string
                    nullable: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  var:
                    type: object
                    additionalProperties:
                      type: string
                  links:
                    type: object
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/features:
    get:
      summary: List app features
      description: |
        Retrieve the list of features for the specified app.
        
        App features control specific capabilities at the application level. Features include:
        - revisions: Enable revision tracking for the app
        - ssh: Enable SSH access to app instances
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - resources
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppFeature'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/features/{name}:
    get:
      summary: Get an app feature
      description: Retrieve a specific app feature by name.
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
        - name: name
          in: path
          required: true
          description: The feature name
          schema:
            type: string
            enum: [revisions, ssh]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeature'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

    patch:
      summary: Update an app feature
      description: |
        Update an app feature.
        
        Only space developers and administrators can update app features.
      tags:
        - apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
        - name: name
          in: path
          required: true
          description: The feature name
          schema:
            type: string
            enum: [revisions, ssh]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppFeatureUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppFeature'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/manifest:
    get:
      summary: Get app manifest
      description: |
        Retrieve the manifest for a specific application.
        
        The manifest is returned as a YAML document that describes the application's
        configuration, including environment variables, services, routes, and other settings.
      tags:
        - Manifests
        - Apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/x-yaml:
              schema:
                type: string
                description: YAML manifest content
                example: |
                  applications:
                  - name: my-app
                    memory: 512M
                    instances: 2
                    routes:
                    - route: my-app.example.com
                    services:
                    - my-database
                    env:
                      FEATURE_FLAG: enabled
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/actions/apply_manifest:
    post:
      summary: Apply manifest to an app
      description: |
        Apply a manifest to update a specific application.
        
        This endpoint updates the application configuration based on the provided
        manifest. Only the first application in the manifest is used, and its name
        must match the target application.
      tags:
        - Manifests
        - Apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              type: string
              description: YAML manifest content
              example: |
                applications:
                - name: my-app
                  memory: 1G
                  instances: 3
                  env:
                    NEW_FEATURE: enabled
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                      job:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/permissions:
    get:
      summary: Get app permissions
      description: Get permissions the current user has for the specified app
      operationId: getAppPermissions
      tags:
        - apps
        - permissions
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  read:
                    type: boolean
                  write:
                    type: boolean
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/ssh_enabled:
    get:
      summary: Get SSH enabled
      description: Check if SSH is enabled for an app
      operationId: getAppSshEnabled
      tags:
        - apps
        - ssh
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                  reason:
                    type: string
                    nullable: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/relationships/current_droplet:
    get:
      summary: Get current droplet relationship
      description: Retrieve the current droplet relationship for an app.
      tags:
        - Apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                      related:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
      security:
        - bearerAuth: []

    patch:
      summary: Update current droplet relationship
      description: Set the current droplet for an app. The droplet must be in a STAGED state.
      tags:
        - Apps
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  required:
                    - guid
                  properties:
                    guid:
                      type: string
                      format: uuid
                      description: The droplet GUID to set as current
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                      related:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      security:
        - bearerAuth: []

components:
  schemas:
    App:
      type: object
      required:
        - guid
        - name
        - state
        - created_at
        - updated_at
        - lifecycle
        - relationships
        - links
        - metadata
      properties:
        guid:
          type: string
          format: uuid
          description: Unique identifier for the app
        name:
          type: string
          description: Name of the app
        state:
          type: string
          enum: [STOPPED, STARTED]
          description: Current desired state of the app
        created_at:
          type: string
          format: date-time
          description: When the app was created
        updated_at:
          type: string
          format: date-time
          description: When the app was last updated
        lifecycle:
          type: object
          required:
            - type
            - data
          properties:
            type:
              type: string
              enum: [buildpack, cnb, docker]
              description: Lifecycle type
            data:
              type: object
              properties:
                buildpacks:
                  type: array
                  items:
                    type: string
                  description: Buildpacks for buildpack/cnb lifecycle
                stack:
                  type: string
                  description: Stack for buildpack lifecycle
                image:
                  type: string
                  description: Docker image reference
        relationships:
          type: object
          required:
            - space
          properties:
            space:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
                      format: uuid
            current_droplet:
              type: object
              nullable: true
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    guid:
                      type: string
                      format: uuid
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            space:
              $ref: '#/components/schemas/Link'
            processes:
              $ref: '#/components/schemas/Link'
            packages:
              $ref: '#/components/schemas/Link'
            environment_variables:
              $ref: '#/components/schemas/Link'
            current_droplet:
              $ref: '#/components/schemas/Link'
            droplets:
              $ref: '#/components/schemas/Link'
            tasks:
              $ref: '#/components/schemas/Link'
            start:
              $ref: '#/components/schemas/LinkWithMethod'
            stop:
              $ref: '#/components/schemas/LinkWithMethod'
            revisions:
              $ref: '#/components/schemas/Link'
            deployed_revisions:
              $ref: '#/components/schemas/Link'
            features:
              $ref: '#/components/schemas/Link'
        metadata:
          type: object
          properties:
            labels:
              type: object
              additionalProperties:
                type: string
            annotations:
              type: object
              additionalProperties:
                type: string

    Revision:
      type: object
      required:
        - guid
        - version
        - droplet
        - processes
        - sidecars
        - created_at
        - updated_at
        - description
        - deployable
        - metadata
        - links
      properties:
        guid:
          type: string
          format: uuid
        version:
          type: integer
          description: Revision version number
        droplet:
          type: object
          properties:
            guid:
              type: string
              format: uuid
        processes:
          type: object
          additionalProperties:
            type: object
            properties:
              command:
                type: string
                nullable: true
        sidecars:
          type: array
          items:
            type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
        deployable:
          type: boolean
          description: Whether this revision can be deployed
        metadata:
          type: object
          properties:
            labels:
              type: object
              additionalProperties:
                type: string
            annotations:
              type: object
              additionalProperties:
                type: string
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            app:
              $ref: '#/components/schemas/Link'

    Space:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        name:
          type: string
        relationships:
          type: object
          properties:
            organization:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
                      format: uuid

    Organization:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        name:
          type: string

    Pagination:
      type: object
      properties:
        total_results:
          type: integer
        total_pages:
          type: integer
        first:
          type: object
          properties:
            href:
              type: string
        last:
          type: object
          properties:
            href:
              type: string
        next:
          type: object
          nullable: true
          properties:
            href:
              type: string
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string

    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          format: uri

    LinkWithMethod:
      allOf:
        - $ref: '#/components/schemas/Link'
        - type: object
          required:
            - method
          properties:
            method:
              type: string
              enum: [GET, POST, PUT, PATCH, DELETE]

    AppFeature:
      type: object
      required:
        - name
        - description
        - enabled
      properties:
        name:
          type: string
          description: The feature identifier
          enum: [revisions, ssh]
          example: revisions
        description:
          type: string
          description: Human-readable description of the feature
          example: Enable versioning for application deployments
        enabled:
          type: boolean
          description: Whether the feature is enabled for this app
          example: true
        metadata:
          type: object
          description: Additional metadata for the app feature
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
              example:
                feature-set: advanced
                stability: stable
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
              example:
                enabled-by: platform-team@example.com
                enabled-date: "2024-01-15"

    AppFeatureUpdate:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
          description: Whether to enable or disable the feature
          example: true
        metadata:
          type: object
          description: Additional metadata for the app feature
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
                maxLength: 63
              example:
                feature-set: advanced
                stability: stable
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
                maxLength: 5000
              example:
                enabled-by: platform-team@example.com
                enabled-date: "2024-01-15"

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT