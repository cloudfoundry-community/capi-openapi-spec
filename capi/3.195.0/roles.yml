paths:
  /v3/roles:
    post:
      summary: Create a role
      description: |
        Create a new role for a user in an organization or space.
        
        Roles define the permissions a user has within Cloud Foundry. Organization roles
        apply across all spaces in an organization, while space roles apply to a specific space.
      tags:
        - Roles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

    get:
      summary: List roles
      description: |
        List roles that the user has access to.
        
        This endpoint returns all roles visible to the current user, filtered by the
        provided query parameters.
      tags:
        - Roles
      parameters:
        - name: guids
          in: query
          description: Comma-delimited list of role guids to filter by
          schema:
            type: string
            example: 1234,5678
        - name: types
          in: query
          description: Comma-delimited list of role types to filter by
          schema:
            type: string
            example: organization_manager,space_developer
        - name: space_guids
          in: query
          description: Comma-delimited list of space guids to filter by
          schema:
            type: string
        - name: organization_guids
          in: query
          description: Comma-delimited list of organization guids to filter by
          schema:
            type: string
        - name: user_guids
          in: query
          description: Comma-delimited list of user guids to filter by
          schema:
            type: string
        - name: label_selector
          in: query
          description: Filter by label selector
          schema:
            type: string
            example: environment==production,tier!=backend
        - name: page
          in: query
          description: Page to display
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 50
        - name: order_by
          in: query
          description: Value to sort by
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
            default: created_at
        - name: include
          in: query
          description: Optionally include related resources in the response
          schema:
            type: string
            enum: [user, space, organization]
            example: user,organization
        - name: created_ats
          in: query
          description: Filter by creation time
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Filter by update time
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pagination
                  - resources
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Role'
                  included:
                    type: object
                    description: Included resources when using include parameter
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
                      organizations:
                        type: array
                        items:
                          $ref: '#/components/schemas/Organization'
                      spaces:
                        type: array
                        items:
                          $ref: '#/components/schemas/Space'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []

  /v3/roles/{guid}:
    get:
      summary: Get a role
      description: Retrieve detailed information about a specific role.
      tags:
        - Roles
      parameters:
        - name: guid
          in: path
          required: true
          description: The role GUID
          schema:
            type: string
            format: uuid
        - name: include
          in: query
          description: Optionally include related resources in the response
          schema:
            type: string
            enum: [user, space, organization]
            example: user,organization
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

    delete:
      summary: Delete a role
      description: |
        Delete an individual role.
        
        This removes the user's permissions associated with this role.
      tags:
        - Roles
      parameters:
        - name: guid
          in: path
          required: true
          description: The role GUID
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

components:
  schemas:
    Role:
      type: object
      required:
        - guid
        - type
        - relationships
        - created_at
        - updated_at
        - links
      properties:
        guid:
          type: string
          format: uuid
          description: Unique identifier for the role
        type:
          type: string
          description: The type of role
          enum:
            - organization_user
            - organization_auditor
            - organization_manager
            - organization_billing_manager
            - space_auditor
            - space_manager
            - space_developer
            - space_supporter
          example: space_developer
        metadata:
          type: object
          description: Additional metadata for the role
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
              example:
                team: platform
                managed-by: terraform
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
              example:
                contact: admin@example.com
                purpose: CI/CD automation account
        relationships:
          type: object
          required:
            - user
          properties:
            user:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - guid
                  properties:
                    guid:
                      type: string
                      format: uuid
                      description: GUID of the user with this role
            organization:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    guid:
                      type: string
                      format: uuid
                      description: GUID of the organization (null for space roles)
            space:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    guid:
                      type: string
                      format: uuid
                      description: GUID of the space (null for organization roles)
        created_at:
          type: string
          format: date-time
          description: Timestamp when the role was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the role was last updated
        links:
          type: object
          required:
            - self
            - user
          properties:
            self:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/roles/1cb006ee-fb05-47e1-b541-c34179ddc446
            user:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/users/d4c91047-7b29-4fda-b7f9-04033e5c9c9f
            organization:
              type: object
              nullable: true
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/organizations/1cb006ee-fb05-47e1-b541-c34179ddc446
            space:
              type: object
              nullable: true
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/spaces/1cb006ee-fb05-47e1-b541-c34179ddc446

    RoleCreate:
      type: object
      required:
        - type
        - relationships
      properties:
        type:
          type: string
          description: The type of role to create
          enum:
            - organization_user
            - organization_auditor
            - organization_manager
            - organization_billing_manager
            - space_auditor
            - space_manager
            - space_developer
            - space_supporter
          example: space_developer
        metadata:
          type: object
          description: Additional metadata for the role
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
                maxLength: 63
              example:
                team: platform
                managed-by: terraform
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
                maxLength: 5000
              example:
                contact: admin@example.com
                purpose: CI/CD automation account
        relationships:
          type: object
          required:
            - user
          properties:
            user:
              type: object
              required:
                - data
              properties:
                data:
                  oneOf:
                    - type: object
                      required:
                        - guid
                      properties:
                        guid:
                          type: string
                          format: uuid
                          description: User GUID
                    - type: object
                      required:
                        - username
                      properties:
                        username:
                          type: string
                          description: Username (email)
                          example: user@example.com
                        origin:
                          type: string
                          description: Identity provider origin
                          default: uaa
                          example: ldap
            organization:
              type: object
              description: Required for organization roles
              properties:
                data:
                  type: object
                  required:
                    - guid
                  properties:
                    guid:
                      type: string
                      format: uuid
                      description: Organization GUID
            space:
              type: object
              description: Required for space roles
              properties:
                data:
                  type: object
                  required:
                    - guid
                  properties:
                    guid:
                      type: string
                      format: uuid
                      description: Space GUID

    User:
      type: object
      description: User resource when included
      properties:
        guid:
          type: string
          format: uuid
        username:
          type: string
        presentation_name:
          type: string
        origin:
          type: string

    Organization:
      type: object
      description: Organization resource when included
      properties:
        guid:
          type: string
          format: uuid
        name:
          type: string

    Space:
      type: object
      description: Space resource when included
      properties:
        guid:
          type: string
          format: uuid
        name:
          type: string

    Pagination:
      type: object
      required:
        - total_results
        - total_pages
        - first
        - last
      properties:
        total_results:
          type: integer
          description: Total number of results across all pages
          minimum: 0
        total_pages:
          type: integer
          description: Total number of pages
          minimum: 0
        first:
          type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              description: URL to the first page of results
        last:
          type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              description: URL to the last page of results
        next:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri
              description: URL to the next page of results
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri
              description: URL to the previous page of results

  responses:
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntityError:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Cloud Foundry UAA token