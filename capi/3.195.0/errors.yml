components:
  schemas:
    Error:
      type: object
      required:
        - code
        - title
        - detail
      properties:
        code:
          type: integer
          description: A numeric code for this error
          example: 10008
        title:
          type: string
          description: Name of the error
          example: "CF-UnprocessableEntity"
        detail:
          type: string
          description: Detailed description of the error
          example: "The request is semantically invalid: something went wrong"
        test_mode_info:
          type: object
          description: Additional information when in test mode
          properties:
            backtrace:
              type: array
              items:
                type: string
              description: Stack trace of the error
            source:
              type: object
              properties:
                pointer:
                  type: string
                  description: JSON pointer to the source of the error
                parameter:
                  type: string
                  description: Query parameter that caused the error

    Errors:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          description: List of error objects
          items:
            $ref: '#/components/schemas/Error'

    ValidationError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10002]
              example: 10002
            title:
              enum: ["CF-InvalidAuthToken", "CF-InvalidRequest", "CF-BadRequest"]
            source:
              type: object
              properties:
                pointer:
                  type: string
                  description: JSON Pointer to the invalid field
                  example: "/relationships/space/data/guid"
                parameter:
                  type: string
                  description: Query parameter that caused the error
                  example: "order_by"

    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10002]
              example: 10002
            title:
              enum: ["CF-InvalidAuthToken"]
              example: "CF-InvalidAuthToken"
            detail:
              example: "Invalid Auth Token"

    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10003]
              example: 10003
            title:
              enum: ["CF-Forbidden"]
              example: "CF-Forbidden"
            detail:
              example: "You are not authorized to perform the requested action"

    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10010]
              example: 10010
            title:
              enum: ["CF-ResourceNotFound"]
              example: "CF-ResourceNotFound"
            detail:
              example: "The resource you requested could not be found"

    UnprocessableEntityError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10008]
              example: 10008
            title:
              enum: ["CF-UnprocessableEntity"]
              example: "CF-UnprocessableEntity"
            detail:
              example: "The request is semantically invalid"

    ServiceUnavailableError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10015]
              example: 10015
            title:
              enum: ["CF-ServiceUnavailable"]
              example: "CF-ServiceUnavailable"
            detail:
              example: "Service broker is currently unavailable"

    RateLimitExceededError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10013]
              example: 10013
            title:
              enum: ["CF-RateLimitExceeded"]
              example: "CF-RateLimitExceeded"
            detail:
              example: "Rate limit exceeded"

    AsyncServiceError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [60016]
              example: 60016
            title:
              enum: ["CF-AsyncServiceError"]
              example: "CF-AsyncServiceError"
            detail:
              example: "Asynchronous service operation failed"

    UniquenessError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [10016]
              example: 10016
            title:
              enum: ["CF-UniquenessError"]
              example: "CF-UniquenessError"
            detail:
              example: "The resource with the given attributes already exists"

    RelationshipError:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              enum: [1002]
              example: 1002
            title:
              enum: ["CF-InvalidRelation"]
              example: "CF-InvalidRelation"
            detail:
              example: "The requested relationship is invalid"

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
    
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenError'
    
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
    
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnprocessableEntityError'
    
    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceUnavailableError'
    
    RateLimitExceeded:
      description: Rate Limit Exceeded
      headers:
        X-RateLimit-Limit:
          description: Request limit per time window
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Remaining requests in time window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when rate limit window resets (Unix timestamp)
          schema:
            type: integer
        Retry-After:
          description: Seconds until rate limit resets
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RateLimitExceededError'