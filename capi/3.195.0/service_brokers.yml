paths:
  /v3/service_brokers:
    get:
      summary: List service brokers
      description: Retrieves the service brokers the user has access to.
      parameters:
      - name: names
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of service broker names to filter by
      - name: space_guids
        in: query
        schema:
          type: array
          items:
            type: string
        description: Comma-delimited list of space GUIDs to filter by
      - name: order_by
        in: query
        schema:
          type: string
          enum: [created_at, updated_at, name, -created_at, -updated_at, -name]
        description: Value to sort by
      - name: page
        in: query
        schema:
          type: integer
          minimum: 1
      - name: per_page
        in: query
        schema:
          type: integer
          minimum: 1
          maximum: 5000
      - name: label_selector
        in: query
        schema:
          type: string
      - name: created_ats
        in: query
        schema:
          type: string
      - name: updated_ats
        in: query
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceBroker'
      security:
      - Admin:
        - cloud_controller.admin
      - AdminReadOnly:
        - cloud_controller.admin_read_only
      - GlobalAuditor:
        - cloud_controller.global_auditor
      - SpaceDeveloper:
        - cloud_controller.read
      - SpaceSupporter:
        - cloud_controller.read

    post:
      summary: Create a service broker
      description: Creates a new service broker and syncs with catalog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - url
                - authentication
              properties:
                name:
                  type: string
                url:
                  type: string
                authentication:
                  $ref: '#/components/schemas/Authentication'
                relationships:
                  type: object
                  properties:
                    space:
                      $ref: '#/components/schemas/ToOneRelationship'
                metadata:
                  $ref: '#/components/schemas/Metadata'
      responses:
        "202":
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBroker'
      security:
      - Admin:
        - cloud_controller.admin
      - SpaceDeveloper:
        - cloud_controller.write

  /v3/service_brokers/{guid}:
    parameters:
    - name: guid
      in: path
      required: true
      schema:
        type: string

    get:
      summary: Get a service broker
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBroker'
      security:
      - Admin:
        - cloud_controller.admin
      - AdminReadOnly:
        - cloud_controller.admin_read_only
      - GlobalAuditor:
        - cloud_controller.global_auditor
      - SpaceDeveloper:
        - cloud_controller.read
      - SpaceSupporter:
        - cloud_controller.read

    patch:
      summary: Update a service broker
      description: Updates a service broker. May trigger catalog sync based on fields updated.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                url:
                  type: string
                authentication:
                  $ref: '#/components/schemas/Authentication'
                metadata:
                  $ref: '#/components/schemas/Metadata'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBroker'
        "202":
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceBroker'
      security:
      - Admin:
        - cloud_controller.admin
      - SpaceDeveloper:
        - cloud_controller.write

    delete:
      summary: Delete a service broker
      responses:
        "202":
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: uri
      security:
      - Admin:
        - cloud_controller.admin
      - SpaceDeveloper:
        - cloud_controller.write

  /v3/service_brokers/{guid}/catalog:
    parameters:
    - name: guid
      in: path
      required: true
      schema:
        type: string

    post:
      summary: Sync service broker catalog
      description: Triggers a synchronization of the service broker's catalog
      responses:
        "202":
          description: Accepted
          headers:
            Location:
              schema:
                type: string
                format: uri
      security:
      - Admin:
        - cloud_controller.admin
      - SpaceDeveloper:
        - cloud_controller.write

  /v3/service_brokers/{guid}/jobs/synchronization:
    parameters:
    - name: guid
      in: path
      required: true
      schema:
        type: string

    get:
      summary: Get broker synchronization job status
      description: Retrieves status of the last catalog synchronization job
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LastOperation'
      security:
      - Admin:
        - cloud_controller.admin
      - AdminReadOnly:
        - cloud_controller.admin_read_only
      - SpaceDeveloper:
        - cloud_controller.write
      - SpaceSupporter:
        - cloud_controller.get

components:
  schemas:
    Authentication:
      type: object
      required:
        - type
        - credentials
      properties:
        type:
          type: string
          enum: [basic]
        credentials:
          type: object
          required:
            - username
            - password
          properties:
            username:
              type: string
            password:
              type: string

    ServiceBroker:
      type: object
      properties:
        guid:
          type: string
          format: uuid
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        url:
          type: string
        relationships:
          type: object
          properties:
            space:
              $ref: '#/components/schemas/ToOneRelationship'
        metadata:
          $ref: '#/components/schemas/Metadata'
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            service_offerings:
              $ref: '#/components/schemas/Link'
            space:
              $ref: '#/components/schemas/Link'

