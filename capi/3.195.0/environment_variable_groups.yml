paths:
  /v3/environment_variable_groups/{name}:
    get:
      summary: Get an environment variable group
      description: |
        Retrieve a specific environment variable group.
        
        Environment variable groups are system-wide variables that are injected into
        all running or staging app containers. The 'running' group is injected into
        all running apps, while the 'staging' group is injected during the staging process.
      tags:
        - Environment Variable Groups
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the environment variable group
          schema:
            type: string
            enum: [running, staging]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableGroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

    patch:
      summary: Update environment variable group
      description: |
        Update the environment variable group.
        
        The variables given in the request will be merged with the existing environment
        variable group. Any requested variables with a value of null will be removed
        from the group.
        
        Restrictions:
        - Environment variable names may not start with VCAP_
        - PORT is not a valid environment variable name
        - CF_ prefixed variables are reserved for system use
      tags:
        - Environment Variable Groups
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the environment variable group
          schema:
            type: string
            enum: [running, staging]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentVariableGroupUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentVariableGroup'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

components:
  schemas:
    EnvironmentVariableGroup:
      type: object
      required:
        - name
        - var
        - updated_at
        - links
      properties:
        name:
          type: string
          description: Name of the environment variable group
          enum: [running, staging]
          example: running
        var:
          type: object
          description: Environment variables as key-value pairs
          additionalProperties:
            type: string
          example:
            FEATURE_FLAG: enabled
            API_TIMEOUT: "30"
            LOG_LEVEL: info
        metadata:
          type: object
          description: Additional metadata for the environment variable group
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
              example:
                managed-by: platform-team
                environment: global
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
              example:
                contact: platform-team@example.com
                last-reviewed: "2024-01-15"
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the environment variable group was last updated
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/environment_variable_groups/running

    EnvironmentVariableGroupUpdate:
      type: object
      properties:
        var:
          type: object
          description: |
            Environment variables to update as key-value pairs.
            Set a value to null to remove the variable.
          additionalProperties:
            type: string
            nullable: true
          example:
            FEATURE_FLAG: enabled
            API_TIMEOUT: "30"
            OLD_VAR: null
        metadata:
          type: object
          description: Additional metadata for the environment variable group
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
                maxLength: 63
              example:
                managed-by: platform-team
                environment: global
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
                maxLength: 5000
              example:
                contact: platform-team@example.com
                last-reviewed: "2024-01-15"

  responses:
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntityError:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Cloud Foundry UAA token