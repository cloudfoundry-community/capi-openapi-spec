paths:
  /v3/jobs/{guid}:
    get:
      summary: Get a job
      description: |
        Retrieve a job by its GUID.
        
        Jobs represent asynchronous operations in Cloud Foundry. When an operation
        returns a 202 Accepted response, it provides a Location header with the job URL.
        Clients should poll this endpoint to check the job's completion status.
      tags:
        - Jobs
      parameters:
        - name: guid
          in: path
          required: true
          description: The job GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/jobs:
    get:
      summary: List jobs
      description: |
        Retrieve all jobs the user has access to.
        
        This endpoint returns jobs across all resources and operations. Jobs are
        automatically cleaned up after completion, so only recent jobs are available.
      tags:
        - Jobs
      parameters:
        - name: page
          in: query
          description: Page to display
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 50
        - name: order_by
          in: query
          description: Value to sort by
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
            default: -created_at
        - name: states
          in: query
          description: Comma-delimited list of job states to filter by
          schema:
            type: string
            example: PROCESSING,COMPLETE
        - name: label_selector
          in: query
          description: Filter by label selector
          schema:
            type: string
            example: environment==production,tier!=backend
        - name: created_ats
          in: query
          description: Filter by creation time
          schema:
            type: string
            example: created_ats[gte]=2024-01-01T00:00:00Z
        - name: updated_ats
          in: query
          description: Filter by update time
          schema:
            type: string
        - name: guids
          in: query
          description: Comma-delimited list of job GUIDs to filter by
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pagination
                  - resources
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Job'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
        - bearerAuth: []

components:
  schemas:
    Job:
      type: object
      required:
        - guid
        - created_at
        - updated_at
        - operation
        - state
        - links
      properties:
        guid:
          type: string
          format: uuid
          description: Unique identifier for the job
        created_at:
          type: string
          format: date-time
          description: Timestamp when the job was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the job was last updated
        operation:
          type: string
          description: Description of the operation being performed
          example: app.delete
        state:
          type: string
          description: Current state of the job
          enum: [PROCESSING, COMPLETE, FAILED, POLLING]
          example: PROCESSING
        errors:
          type: array
          description: Errors that occurred during job processing
          items:
            type: object
            properties:
              code:
                type: integer
                description: Error code
                example: 10008
              title:
                type: string
                description: Error title
                example: UnprocessableEntity
              detail:
                type: string
                description: Detailed error message
                example: The request body is invalid
        warnings:
          type: array
          description: Warnings that occurred during job processing
          items:
            type: object
            properties:
              detail:
                type: string
                description: Warning message
                example: The app is using a deprecated runtime
        metadata:
          type: object
          description: Additional metadata for the job
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
              example:
                operation-type: deployment
                triggered-by: pipeline
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
              example:
                initiator: user@example.com
                reason: scheduled-maintenance
        resource:
          type: object
          description: The resource being operated on
          properties:
            guid:
              type: string
              format: uuid
              description: GUID of the resource
            type:
              type: string
              description: Type of the resource
              example: app
            name:
              type: string
              description: Name of the resource
              example: my-app
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/jobs/1cb006ee-fb05-47e1-b541-c34179ddc446
            resource:
              type: object
              description: Link to the resource being operated on
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/apps/1cb006ee-fb05-47e1-b541-c34179ddc446

    Pagination:
      type: object
      required:
        - total_results
        - total_pages
        - first
        - last
      properties:
        total_results:
          type: integer
          description: Total number of results across all pages
          minimum: 0
        total_pages:
          type: integer
          description: Total number of pages
          minimum: 0
        first:
          type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              description: URL to the first page of results
        last:
          type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              description: URL to the last page of results
        next:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri
              description: URL to the next page of results
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri
              description: URL to the previous page of results

  responses:
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Cloud Foundry UAA token