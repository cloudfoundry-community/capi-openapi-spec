paths:
  /v3/organizations:
    post:
      summary: Create an Organization
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                suspended:
                  type: boolean
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      security:
        - Admin:
          - cloud_controller.admin
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    get:
      summary: List Organizations
      operationId: listOrganizations
      parameters:
        - name: names
          in: query
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
        - name: created_ats
          in: query
          schema:
            type: string
        - name: updated_ats
          in: query
          schema:
            type: string
      security:
        - Admin:
          - cloud_controller.admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
  /v3/organizations/{guid}:
    get:
      summary: Get an Organization
      operationId: getOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string

      security: []

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    patch:
      summary: Update an Organization
      operationId: updateOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                suspended:
                  type: boolean
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      security:
        - Admin:
          - cloud_controller.admin
        - OrgManager:
          - cloud_controller.write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    delete:
      summary: Delete an Organization
      operationId: deleteOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security:
        - Admin:
          - cloud_controller.admin
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object

  /v3/organizations/{guid}/relationships/default_isolation_segment:
    patch:
      summary: Assign Default Isolation Segment
      operationId: assignDefaultIsolationSegment
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
      security:
        - Admin:
          - cloud_controller.admin
        - OrgManager:
          - cloud_controller.write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
    get:
      summary: Get Default Isolation Segment
      operationId: getDefaultIsolationSegment
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v3/organizations/{guid}/domains/default:
    get:
      summary: Get Default Domain
      operationId: getDefaultDomain
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v3/organizations/{guid}/usage_summary:
    get:
      summary: Get Usage Summary
      operationId: getUsageSummary
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v3/organizations/{guid}/users:
    get:
      summary: List Users for an Organization
      operationId: listUsersForOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: usernames
          in: query
          schema:
            type: string
        - name: partial_usernames
          in: query
          schema:
            type: string
        - name: origins
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
        - name: created_ats
          in: query
          schema:
            type: string
        - name: updated_ats
          in: query
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
components:
  schemas:
    Organization:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        suspended:
          type: boolean
        relationships:
          type: object
          properties:
            quota:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
            domains:
              type: string
              format: uri
            default_domain:
              type: string
              format: uri
            quota:
              type: string
              format: uri
    User:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
        presentation_name:
          type: string
        origin:
          type: string
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
