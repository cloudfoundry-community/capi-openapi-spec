components:
  securitySchemes:
    OAuth2:
      type: "oauth2"
      description: "OAuth 2.0 Authorization"
      name: "Authorization"
      bearerFormat: "JWT"
      scheme: "bearer"
      in: "header"
      flows:
        authorizationCode:
          authorizationUrl: "/oauth/token"
          tokenUrl: "/oauth/token"
          scopes:
            "cloud_controller.admin": "Full read and write access to all resources"
            "cloud_controller.admin_read_only": "Read-only access to all resources"
            "cloud_controller.global_auditor": "Read-only access excluding sensitive data"
            "cloud_controller.read": "Read access based on user roles"
            "cloud_controller.write": "Write access based on user roles"
            "cloud_controller.update_build_state": "Ability to update build states"
            "cloud_controller_service_permissions.read": "Read-only access for service instance permissions"
            "cloud_controller.update_build_state": "Ability to update build states"
    bearerAuth:
      type: http
      scheme: bearer
    Admin:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.admin: "admin access"
    AdminReadOnly:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.admin_read_only: "admin read access"
    BuildStateUpdater:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.update_build_state: "build state updater access"
    GlobalAuditor:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.global_auditor: "global auditor access"
    OrgManager:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.write: "organization manager access"
            cloud_controller.read: "organization manager read access"
    OrgBillingManager:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.read: "organization manager read access" # TODO: Double check this
    SpaceAuditor:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.read: "space auditor access"
    SpaceDeveloper:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.write: "space developer access"
            cloud_controller.read: "space developer read access"
    SpaceManager:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.write: "space manager access"
            cloud_controller.read: "space manager read access"
    SpaceSupporter:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: "/oauth/token"
          scopes:
            cloud_controller.write: "space supporter access"
            cloud_controller.read: "space supporter read access"

security:
  - OAuth2: []
  - Admin:
    - cloud_controller.admin
  - AdminReadOnly:
    - cloud_controller.admin_read_only
  - GlobalAuditor:
    - cloud_controller.global_auditor
  - OrgManager:
    - cloud_controller.read
  - SpaceAuditor:
    - cloud_controller.read
  - SpaceDeveloper:
    - cloud_controller.read
  - SpaceManager:
    - cloud_controller.read
  - SpaceSupporter:
    - cloud_controller.read
