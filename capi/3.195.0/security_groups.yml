paths:
  /v3/security_groups:
    get:
      summary: List security groups
      description: |
        Retrieves a paginated list of security groups.
        
        Security groups are sets of egress traffic rules that can be applied to the containers
        running applications and tasks to restrict their outbound network traffic.
      tags:
        - Security Groups
      parameters:
        - name: guids
          in: query
          description: Comma-delimited list of security group guids to filter by
          schema:
            type: string
            example: 1234,5678
        - name: names
          in: query
          description: Comma-delimited list of security group names to filter by
          schema:
            type: string
            example: my-security-group,another-security-group
        - name: globally_enabled_running
          in: query
          description: If true, only include security groups enabled globally for running apps
          schema:
            type: boolean
        - name: globally_enabled_staging
          in: query
          description: If true, only include security groups enabled globally for staging apps
          schema:
            type: boolean
        - name: running_space_guids
          in: query
          description: Comma-delimited list of space guids to filter by for running security groups
          schema:
            type: string
        - name: staging_space_guids
          in: query
          description: Comma-delimited list of space guids to filter by for staging security groups
          schema:
            type: string
        - name: label_selector
          in: query
          description: Filter by label selector
          schema:
            type: string
            example: environment==production,tier!=backend
        - name: page
          in: query
          description: Page to display
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 50
        - name: order_by
          in: query
          description: Value to sort by
          schema:
            type: string
            enum: [created_at, updated_at, -created_at, -updated_at, name, -name]
            default: created_at
        - name: created_ats
          in: query
          description: Filter by creation time
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Filter by update time
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pagination
                  - resources
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityGroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
      security:
        - bearerAuth: []

    post:
      summary: Create a security group
      description: |
        Creates a new security group with the specified rules.
        
        Security group rules control egress traffic from app and task containers.
      tags:
        - Security Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityGroupCreate'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroup'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

  /v3/security_groups/{guid}:
    get:
      summary: Get a security group
      description: Retrieves a security group by its GUID.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

    patch:
      summary: Update a security group
      description: |
        Updates the specified attributes of a security group.
        
        Only the fields provided in the request body will be updated.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityGroupUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityGroup'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

    delete:
      summary: Delete a security group
      description: |
        Deletes a security group.
        
        The security group cannot be deleted if it is currently bound to any spaces.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/security_groups/{guid}/relationships/running_spaces:
    post:
      summary: Bind running security group to spaces
      description: |
        Binds one or more spaces to a security group with the running lifecycle.
        
        Running security groups apply to all running app instances in the bound spaces.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  description: List of space relationships to bind
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
                        format: uuid
                        description: Space GUID to bind
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - guid
                      properties:
                        guid:
                          type: string
                          format: uuid
                  links:
                    type: object
                    required:
                      - self
                    properties:
                      self:
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            type: string
                            format: uri
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

  /v3/security_groups/{guid}/relationships/staging_spaces:
    post:
      summary: Bind staging security group to spaces
      description: |
        Binds one or more spaces to a security group with the staging lifecycle.
        
        Staging security groups apply during app staging in the bound spaces.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  description: List of space relationships to bind
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
                        format: uuid
                        description: Space GUID to bind
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - links
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - guid
                      properties:
                        guid:
                          type: string
                          format: uuid
                  links:
                    type: object
                    required:
                      - self
                    properties:
                      self:
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            type: string
                            format: uri
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security:
        - bearerAuth: []

  /v3/security_groups/{guid}/relationships/running_spaces/{space_guid}:
    delete:
      summary: Unbind running security group from a space
      description: Removes a space from a security group with the running lifecycle.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
        - name: space_guid
          in: path
          required: true
          description: The space GUID to unbind
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/security_groups/{guid}/relationships/staging_spaces/{space_guid}:
    delete:
      summary: Unbind staging security group from a space
      description: Removes a space from a security group with the staging lifecycle.
      tags:
        - Security Groups
      parameters:
        - name: guid
          in: path
          required: true
          description: The security group GUID
          schema:
            type: string
            format: uuid
        - name: space_guid
          in: path
          required: true
          description: The space GUID to unbind
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/running_security_groups:
    get:
      summary: List running security groups for a space
      description: |
        Returns security groups enabled for running apps in the space.
        
        This includes both globally-enabled and space-specific running security groups.
      tags:
        - Security Groups
        - Spaces
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
        - name: guids
          in: query
          description: Comma-delimited list of security group guids to filter by
          schema:
            type: string
        - name: names
          in: query
          description: Comma-delimited list of security group names to filter by
          schema:
            type: string
        - name: page
          in: query
          description: Page to display
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 50
        - name: order_by
          in: query
          description: Value to sort by
          schema:
            type: string
            enum: [created_at, updated_at, -created_at, -updated_at, name, -name]
            default: created_at
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pagination
                  - resources
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityGroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/staging_security_groups:
    get:
      summary: List staging security groups for a space
      description: |
        Returns security groups enabled for staging apps in the space.
        
        This includes both globally-enabled and space-specific staging security groups.
      tags:
        - Security Groups
        - Spaces
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
        - name: guids
          in: query
          description: Comma-delimited list of security group guids to filter by
          schema:
            type: string
        - name: names
          in: query
          description: Comma-delimited list of security group names to filter by
          schema:
            type: string
        - name: page
          in: query
          description: Page to display
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: per_page
          in: query
          description: Number of results per page
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 50
        - name: order_by
          in: query
          description: Value to sort by
          schema:
            type: string
            enum: [created_at, updated_at, -created_at, -updated_at, name, -name]
            default: created_at
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - pagination
                  - resources
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityGroup'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security:
        - bearerAuth: []

components:
  schemas:
    SecurityGroup:
      type: object
      required:
        - guid
        - name
        - rules
        - globally_enabled
        - relationships
        - created_at
        - updated_at
        - links
      properties:
        guid:
          type: string
          format: uuid
          description: Unique identifier for the security group
        name:
          type: string
          description: Human-readable name for the security group
          example: my-security-group
        rules:
          type: array
          description: Array of egress traffic rules
          items:
            $ref: '#/components/schemas/Rule'
        globally_enabled:
          type: object
          description: Whether this security group is applied globally
          required:
            - running
            - staging
          properties:
            running:
              type: boolean
              description: Applied globally to all running apps
            staging:
              type: boolean
              description: Applied globally during app staging
        metadata:
          type: object
          description: Additional metadata for the security group
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
              example:
                environment: production
                team: security
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
              example:
                contact: security-team@example.com
                purpose: Allow access to corporate services
        relationships:
          type: object
          description: Relationships to other resources
          properties:
            running_spaces:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  description: Spaces where this security group applies to running apps
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
                        format: uuid
            staging_spaces:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  description: Spaces where this security group applies during staging
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
                        format: uuid
        created_at:
          type: string
          format: date-time
          description: Timestamp when the security group was created
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the security group was last updated
        links:
          type: object
          required:
            - self
          properties:
            self:
              type: object
              required:
                - href
              properties:
                href:
                  type: string
                  format: uri
                  example: https://api.example.org/v3/security_groups/1cb006ee-fb05-47e1-b541-c34179ddc446

    Rule:
      type: object
      required:
        - protocol
        - destination
      properties:
        protocol:
          type: string
          description: Network protocol
          enum: [tcp, udp, icmp, all]
          example: tcp
        destination:
          type: string
          description: Destination address or CIDR block
          example: 10.0.0.0/8
        ports:
          type: string
          nullable: true
          description: Port or port range (e.g., "80", "8080-8082")
          example: "443"
        type:
          type: integer
          nullable: true
          description: ICMP type (only for ICMP protocol)
          minimum: -1
          maximum: 255
        code:
          type: integer
          nullable: true
          description: ICMP code (only for ICMP protocol)
          minimum: -1
          maximum: 255
        log:
          type: boolean
          nullable: true
          description: Whether to log traffic matching this rule
          default: false
        description:
          type: string
          nullable: true
          description: Human-readable description of the rule
          example: Allow HTTPS to private network

    SecurityGroupCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Human-readable name for the security group
          minLength: 1
          maxLength: 250
          example: my-security-group
        rules:
          type: array
          description: Array of egress traffic rules
          items:
            $ref: '#/components/schemas/Rule'
        globally_enabled:
          type: object
          description: Whether to apply this security group globally
          properties:
            running:
              type: boolean
              description: Apply globally to all running apps
              default: false
            staging:
              type: boolean
              description: Apply globally during app staging
              default: false
        metadata:
          type: object
          description: Additional metadata for the security group
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
                maxLength: 63
              example:
                environment: production
                team: security
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
                maxLength: 5000
              example:
                contact: security-team@example.com
                purpose: Allow access to corporate services
        relationships:
          type: object
          description: Initial relationships to create
          properties:
            running_spaces:
              type: object
              properties:
                data:
                  type: array
                  description: Spaces where this security group applies to running apps
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
                        format: uuid
            staging_spaces:
              type: object
              properties:
                data:
                  type: array
                  description: Spaces where this security group applies during staging
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
                        format: uuid

    SecurityGroupUpdate:
      type: object
      properties:
        name:
          type: string
          description: Human-readable name for the security group
          minLength: 1
          maxLength: 250
          example: my-security-group
        rules:
          type: array
          description: Array of egress traffic rules (replaces all existing rules)
          items:
            $ref: '#/components/schemas/Rule'
        globally_enabled:
          type: object
          description: Whether to apply this security group globally
          properties:
            running:
              type: boolean
              description: Apply globally to all running apps
            staging:
              type: boolean
              description: Apply globally during app staging
        metadata:
          type: object
          description: Additional metadata for the security group
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
                maxLength: 63
              example:
                environment: production
                team: security
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
                maxLength: 5000
              example:
                contact: security-team@example.com
                purpose: Allow access to corporate services

    Pagination:
      type: object
      required:
        - total_results
        - total_pages
        - first
        - last
      properties:
        total_results:
          type: integer
          description: Total number of results across all pages
          minimum: 0
        total_pages:
          type: integer
          description: Total number of pages
          minimum: 0
        first:
          type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              description: URL to the first page of results
        last:
          type: object
          required:
            - href
          properties:
            href:
              type: string
              format: uri
              description: URL to the last page of results
        next:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri
              description: URL to the next page of results
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri
              description: URL to the previous page of results

  responses:
    BadRequestError:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthorizedError:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ForbiddenError:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntityError:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      description: Cloud Foundry UAA token