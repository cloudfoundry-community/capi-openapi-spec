paths:
  /v3/processes:
    get:
      summary: List processes
      description: Retrieve a paginated list of processes the user has access to
      tags:
        - processes
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: order_by
          in: query
          description: Field to sort results by
          required: false
          schema:
            type: string
            enum: [created_at, updated_at, type, -created_at, -updated_at, -type]
        - name: guids
          in: query
          description: Filter by process GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: types
          in: query
          description: Filter by process types (comma-separated)
          required: false
          schema:
            type: string
            example: "web,worker"
        - name: app_guids
          in: query
          description: Filter by app GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: space_guids
          in: query
          description: Filter by space GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: organization_guids
          in: query
          description: Filter by organization GUIDs (comma-separated)
          required: false
          schema:
            type: string
        - name: label_selector
          in: query
          description: Filter by labels using label selector syntax
          required: false
          schema:
            type: string
            example: "environment=production,tier!=backend"
        - name: created_ats
          in: query
          description: Filter by creation timestamp range
          required: false
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Filter by update timestamp range
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Process'
        '401':
          $ref: '#/components/responses/Unauthorized'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/processes/{guid}:
    get:
      summary: Get a process
      description: Retrieve details of a specific process
      tags:
        - processes
      parameters:
        - name: guid
          in: path
          required: true
          description: The process GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

    patch:
      summary: Update a process
      description: Update a process configuration including command, health check, and metadata
      tags:
        - processes
      parameters:
        - name: guid
          in: path
          required: true
          description: The process GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  nullable: true
                  description: Start command for the process
                health_check:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [port, process, http]
                      description: Type of health check
                    data:
                      type: object
                      properties:
                        timeout:
                          type: integer
                          description: Health check timeout in seconds
                        invocation_timeout:
                          type: integer
                          description: Invocation timeout for http health checks
                        interval:
                          type: integer
                          description: Interval between health checks in seconds
                        endpoint:
                          type: string
                          description: Endpoint for http health checks
                readiness_health_check:
                  type: object
                  description: Readiness health check configuration
                  properties:
                    type:
                      type: string
                      enum: [port, process, http]
                    data:
                      type: object
                      properties:
                        invocation_timeout:
                          type: integer
                        interval:
                          type: integer
                        endpoint:
                          type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                        maxLength: 63
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
                        maxLength: 5000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/processes/{guid}/actions/scale:
    post:
      summary: Scale a process
      description: Scale a process to a different number of instances or adjust resource limits
      tags:
        - processes
        - scaling
      parameters:
        - name: guid
          in: path
          required: true
          description: The process GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instances:
                  type: integer
                  minimum: 0
                  description: Number of instances
                memory_in_mb:
                  type: integer
                  minimum: 1
                  description: Memory limit per instance in MB
                disk_in_mb:
                  type: integer
                  minimum: 1
                  description: Disk limit per instance in MB
                log_rate_limit_in_bytes_per_second:
                  type: integer
                  minimum: -1
                  description: Log rate limit per instance (-1 for unlimited)
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/processes/{guid}/stats:
    get:
      summary: Get stats for a process
      description: Retrieve runtime statistics for all instances of a process
      tags:
        - processes
        - monitoring
      parameters:
        - name: guid
          in: path
          required: true
          description: The process GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProcessStats'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/processes/{guid}/instances/{index}:
    delete:
      summary: Terminate a process instance
      description: Terminate a specific instance of a process
      tags:
        - processes
        - instances
      parameters:
        - name: guid
          in: path
          required: true
          description: The process GUID
          schema:
            type: string
            format: uuid
        - name: index
          in: path
          required: true
          description: The instance index
          schema:
            type: integer
            minimum: 0
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes:
    get:
      summary: List processes for an app
      description: List all processes associated with an app
      tags:
        - apps
        - processes
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: types
          in: query
          description: Filter by process types (comma-separated)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Process'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes/{type}:
    get:
      summary: Get a process by type for an app
      description: Get a specific process type for an app
      tags:
        - apps
        - processes
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
            format: uuid
        - name: type
          in: path
          required: true
          description: The process type
          schema:
            type: string
            example: web
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

  /v3/sidecars/{guid}/processes:
    get:
      summary: List processes for a sidecar
      description: List all processes associated with a sidecar
      tags:
        - sidecars
        - processes
      parameters:
        - name: guid
          in: path
          required: true
          description: The sidecar GUID
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          description: Number of results per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 5000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Process'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        default:
          $ref: '#/components/responses/UnexpectedError'
      security:
        - bearerAuth: []

components:
  schemas:
    Process:
      type: object
      required:
        - guid
        - type
        - command
        - instances
        - memory_in_mb
        - disk_in_mb
        - log_rate_limit_in_bytes_per_second
        - health_check
        - readiness_health_check
        - created_at
        - updated_at
        - relationships
        - links
        - metadata
      properties:
        guid:
          type: string
          format: uuid
          description: Unique identifier for the process
        type:
          type: string
          description: Process type (e.g., web, worker)
          example: web
        command:
          type: string
          nullable: true
          description: Start command for the process
        instances:
          type: integer
          minimum: 0
          description: Number of instances
        memory_in_mb:
          type: integer
          description: Memory allocated per instance in MB
        disk_in_mb:
          type: integer
          description: Disk allocated per instance in MB
        log_rate_limit_in_bytes_per_second:
          type: integer
          description: Log rate limit per instance (-1 for unlimited)
        health_check:
          type: object
          properties:
            type:
              type: string
              enum: [port, process, http]
            data:
              type: object
              properties:
                timeout:
                  type: integer
                invocation_timeout:
                  type: integer
                interval:
                  type: integer
                endpoint:
                  type: string
        readiness_health_check:
          type: object
          nullable: true
          properties:
            type:
              type: string
              enum: [port, process, http]
            data:
              type: object
              properties:
                invocation_timeout:
                  type: integer
                interval:
                  type: integer
                endpoint:
                  type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        version:
          type: string
          description: Process version identifier
        relationships:
          type: object
          properties:
            app:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
                      format: uuid
            revision:
              type: object
              nullable: true
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    guid:
                      type: string
                      format: uuid
        links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            scale:
              $ref: '#/components/schemas/Link'
            app:
              $ref: '#/components/schemas/Link'
            space:
              $ref: '#/components/schemas/Link'
            stats:
              $ref: '#/components/schemas/Link'
        metadata:
          type: object
          properties:
            labels:
              type: object
              additionalProperties:
                type: string
            annotations:
              type: object
              additionalProperties:
                type: string

    ProcessStats:
      type: object
      required:
        - type
        - index
        - state
        - usage
        - host
        - instance_ports
        - uptime
        - mem_quota
        - disk_quota
        - fds_quota
        - isolation_segment
        - details
      properties:
        type:
          type: string
          description: Process type
        index:
          type: integer
          description: Instance index
        state:
          type: string
          enum: [RUNNING, CRASHED, STARTING, DOWN]
          description: Instance state
        routable:
          type: boolean
          description: Whether the instance is routable
        usage:
          type: object
          properties:
            time:
              type: string
              format: date-time
            cpu:
              type: number
              format: double
              description: CPU usage percentage
            mem:
              type: integer
              description: Memory usage in bytes
            disk:
              type: integer
              description: Disk usage in bytes
        host:
          type: string
          description: Host running the instance
        instance_internal_ip:
          type: string
          description: Internal IP of the instance
        instance_ports:
          type: array
          items:
            type: object
            properties:
              external:
                type: integer
              internal:
                type: integer
              external_tls_proxy_port:
                type: integer
              internal_tls_proxy_port:
                type: integer
        uptime:
          type: integer
          description: Uptime in seconds
        mem_quota:
          type: integer
          description: Memory quota in bytes
        disk_quota:
          type: integer
          description: Disk quota in bytes
        fds_quota:
          type: integer
          description: File descriptor quota
        isolation_segment:
          type: string
          nullable: true
          description: Isolation segment name
        details:
          type: string
          nullable: true
          description: Additional details about instance state

    Pagination:
      type: object
      properties:
        total_results:
          type: integer
        total_pages:
          type: integer
        first:
          type: object
          properties:
            href:
              type: string
        last:
          type: object
          properties:
            href:
              type: string
        next:
          type: object
          nullable: true
          properties:
            href:
              type: string
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string

    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          format: uri

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Errors'
    
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    
    UnexpectedError:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT