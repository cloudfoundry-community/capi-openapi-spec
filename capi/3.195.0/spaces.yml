paths:
  /v3/spaces:
    get:
      summary: List spaces
      description: Retrieve all spaces the user has access to.
      parameters:
        - name: names
          in: query
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: organization_guids
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: order_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at, name, -name]
        - name: label_selector
          in: query
          schema:
            type: string
        - name: include
          in: query
          schema:
            type: string
            enum: [organization]
        - name: created_ats
          in: query
          schema:
            type: string
        - name: updated_ats
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Space'

    post:
      summary: Create a space
      description: Create a space.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - relationships
              properties:
                name:
                  type: string
                relationships:
                  type: object
                  properties:
                    organization:
                      type: object
                      properties:
                        data:
                          type: object
                          properties:
                            guid:
                              type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'

  /v3/spaces/{guid}:
    get:
      summary: Get a space
      description: Retrieve a space by GUID.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'

    patch:
      summary: Update a space
      description: Update a space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'

    delete:
      summary: Delete a space
      description: Delete a space by GUID.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted

  /v3/spaces/{guid}/relationships/isolation_segment:
    get:
      summary: Get assigned isolation segment
      description: Retrieve the isolation segment assigned to the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string

    patch:
      summary: Manage isolation segment
      description: Assign or unassign an isolation segment to a space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string

  /v3/spaces/{guid}/manifest:
    post:
      summary: Apply manifest to a space
      description: |
        Apply a manifest to create or update multiple applications in a space.
        
        This endpoint processes a YAML manifest and creates or updates applications
        according to the manifest specification. This is an asynchronous operation
        that returns a job to track progress.
      tags:
        - Manifests
        - Spaces
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              type: string
              description: YAML manifest content
              example: |
                applications:
                - name: app-1
                  memory: 512M
                  instances: 2
                  routes:
                  - route: app-1.example.com
                - name: app-2
                  memory: 1G
                  instances: 1
                  routes:
                  - route: app-2.example.com
      responses:
        '202':
          description: Accepted
          headers:
            Location:
              description: URL to poll for job status
              schema:
                type: string
                format: uri
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                    format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
                      job:
                        type: object
                        properties:
                          href:
                            type: string
                            format: uri
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security: []

  /v3/spaces/{guid}/manifest_diff:
    post:
      summary: Generate manifest diff for a space
      description: |
        Compare a provided manifest with the current state of applications in the space.
        
        This endpoint returns a diff showing what would change if the manifest were applied,
        without actually making any changes. This is useful for preview and validation.
        
        This feature is experimental and subject to change.
      tags:
        - Manifests
        - Spaces
      x-experimental: true
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/x-yaml:
            schema:
              type: string
              description: YAML manifest content to compare
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestDiff'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security: []

  /v3/spaces/{guid}/features:
    get:
      summary: List space features
      description: |
        Retrieve the list of features for the specified space.
        
        Space features control specific capabilities within a space. Currently supported features:
        - SSH: Enables SSH access to application instances in the space
      tags:
        - Space Features
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                required:
                  - resources
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/SpaceFeature'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security: []

  /v3/spaces/{guid}/features/{name}:
    get:
      summary: Get a space feature
      description: Retrieve a specific space feature by name.
      tags:
        - Space Features
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
        - name: name
          in: path
          required: true
          description: The feature name
          schema:
            type: string
            enum: [ssh]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceFeature'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
      security: []

    patch:
      summary: Update a space feature
      description: |
        Update a space feature.
        
        Only space managers and administrators can update space features.
      tags:
        - Space Features
      parameters:
        - name: guid
          in: path
          required: true
          description: The space GUID
          schema:
            type: string
            format: uuid
        - name: name
          in: path
          required: true
          description: The feature name
          schema:
            type: string
            enum: [ssh]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpaceFeatureUpdate'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceFeature'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/ForbiddenError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '422':
          $ref: '#/components/responses/UnprocessableEntityError'
      security: []

  /v3/spaces/{guid}/users:
    get:
      summary: List users for a space
      description: Retrieve all users with a role in the specified space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: usernames
          in: query
          schema:
            type: string
        - name: partial_usernames
          in: query
          schema:
            type: string
        - name: origins
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: order_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
        - name: label_selector
          in: query
          schema:
            type: string
        - name: created_ats
          in: query
          schema:
            type: string
        - name: updated_ats
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

components:
  schemas:
    Space:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        relationships:
          type: object
          properties:
            organization:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
            quota:
              type: object
              nullable: true
              properties:
                data:
                  type: object
                  nullable: true
        links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
            features:
              type: object
              properties:
                href:
                  type: string
                  format: uri
            organization:
              type: object
              properties:
                href:
                  type: string
                  format: uri
            apply_manifest:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                method:
                  type: string
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object

    ManifestDiff:
      type: object
      required:
        - diff
      properties:
        diff:
          type: array
          description: List of differences between manifest and current state
          items:
            type: object
            required:
              - app_name
              - changes
            properties:
              app_name:
                type: string
                description: Name of the application
                example: my-app
              changes:
                type: array
                description: List of changes for this application
                items:
                  type: object
                  required:
                    - type
                    - property
                  properties:
                    type:
                      type: string
                      description: Type of change
                      enum: [create, update, delete]
                      example: update
                    property:
                      type: string
                      description: Property being changed
                      example: instances
                    current_value:
                      description: Current value of the property
                      example: 2
                    new_value:
                      description: New value from the manifest
                      example: 3

    SpaceFeature:
      type: object
      required:
        - name
        - description
        - enabled
      properties:
        name:
          type: string
          description: The feature identifier
          enum: [ssh]
          example: ssh
        description:
          type: string
          description: Human-readable description of the feature
          example: Enable SSH for the space
        enabled:
          type: boolean
          description: Whether the feature is enabled for this space
          example: true
        metadata:
          type: object
          description: Additional metadata for the space feature
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
              example:
                security-policy: strict
                compliance: required
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
              example:
                approved-by: security-team@example.com
                approval-date: "2024-01-15"

    SpaceFeatureUpdate:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
          description: Whether to enable or disable the feature
          example: true
        metadata:
          type: object
          description: Additional metadata for the space feature
          properties:
            labels:
              type: object
              description: Key-value pairs for organizing and filtering
              additionalProperties:
                type: string
                maxLength: 63
              example:
                security-policy: strict
                compliance: required
            annotations:
              type: object
              description: Key-value pairs for storing additional information
              additionalProperties:
                type: string
                maxLength: 5000
              example:
                approved-by: security-team@example.com
                approval-date: "2024-01-15"

    Pagination:
      type: object
      properties:
        total_results:
          type: integer
        total_pages:
          type: integer
        first:
          type: object
          properties:
            href:
              type: string
              format: uri
        last:
          type: object
          properties:
            href:
              type: string
              format: uri
        next:
          type: object
          properties:
            href:
              type: string
              format: uri
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri

    User:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
        presentation_name:
          type: string
        origin:
          type: string
          nullable: true
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
