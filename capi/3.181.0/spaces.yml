paths:
  /v3/spaces:
    get:
      summary: List spaces
      description: Retrieve all spaces the user has access to.
      parameters:
        - name: names
          in: query
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: organization_guids
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: order_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at, name, -name]
        - name: label_selector
          in: query
          schema:
            type: string
        - name: include
          in: query
          schema:
            type: string
            enum: [organization]
        - name: created_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: created_ats[gt]=2020-01-01T00:00:00Z, created_ats[gte]=2020-01-01T00:00:00Z, created_ats[lt]=2020-01-01T00:00:00Z, created_ats[lte]=2020-01-01T00:00:00Z. Range queries: created_ats[gt]=2020-01-01T00:00:00Z&created_ats[lt]=2020-12-31T00:00:00Z
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: updated_ats[gt]=2020-01-01T00:00:00Z, updated_ats[gte]=2020-01-01T00:00:00Z, updated_ats[lt]=2020-01-01T00:00:00Z, updated_ats[lte]=2020-01-01T00:00:00Z. Range queries: updated_ats[gt]=2020-01-01T00:00:00Z&updated_ats[lt]=2020-12-31T00:00:00Z
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response. Allowed values are specified per endpoint.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Space'

    post:
      summary: Create a space
      description: Create a space.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - relationships
              properties:
                name:
                  type: string
                relationships:
                  type: object
                  properties:
                    organization:
                      type: object
                      properties:
                        data:
                          type: object
                          properties:
                            guid:
                              type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'

  /v3/spaces/{guid}:
    get:
      summary: Get a space
      description: Retrieve a space by GUID.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'

    patch:
      summary: Update a space
      description: Update a space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'

    delete:
      summary: Delete a space
      description: Delete a space by GUID.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted

  /v3/spaces/{guid}/relationships/isolation_segment:
    get:
      summary: Get assigned isolation segment
      description: Retrieve the isolation segment assigned to the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string

    patch:
      summary: Manage isolation segment
      description: Assign or unassign an isolation segment to a space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string

  /v3/spaces/{guid}/users:
    get:
      summary: List users for a space
      description: Retrieve all users with a role in the specified space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: usernames
          in: query
          schema:
            type: string
        - name: partial_usernames
          in: query
          schema:
            type: string
        - name: origins
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
        - name: per_page
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
        - name: order_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
        - name: label_selector
          in: query
          schema:
            type: string
        - name: created_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: created_ats[gt]=2020-01-01T00:00:00Z, created_ats[gte]=2020-01-01T00:00:00Z, created_ats[lt]=2020-01-01T00:00:00Z, created_ats[lte]=2020-01-01T00:00:00Z. Range queries: created_ats[gt]=2020-01-01T00:00:00Z&created_ats[lt]=2020-12-31T00:00:00Z
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: updated_ats[gt]=2020-01-01T00:00:00Z, updated_ats[gte]=2020-01-01T00:00:00Z, updated_ats[lt]=2020-01-01T00:00:00Z, updated_ats[lte]=2020-01-01T00:00:00Z. Range queries: updated_ats[gt]=2020-01-01T00:00:00Z&updated_ats[lt]=2020-12-31T00:00:00Z
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response. Allowed values are specified per endpoint.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /v3/spaces/{guid}/routes:
    get:
      summary: List routes in a space
      description: Retrieve all routes in the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: domains
          in: query
          description: Comma-delimited list of domain guids to filter by
          schema:
            type: string
        - name: hosts
          in: query
          description: Comma-delimited list of hosts to filter by
          schema:
            type: string
        - name: paths
          in: query
          description: Comma-delimited list of paths to filter by
          schema:
            type: string
        - name: ports
          in: query
          description: Comma-delimited list of ports to filter by
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
        - name: include
          in: query
          description: Include related resources (domain, space, space.organization)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
      security:
        - bearerAuth: []

    post:
      summary: Create a route in a space
      description: Create a new route within the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - domain
              properties:
                domain:
                  type: object
                  required:
                    - guid
                  properties:
                    guid:
                      type: string
                host:
                  type: string
                  description: Hostname for the route (for HTTP routes)
                path:
                  type: string
                  description: Path for the route (for HTTP routes)
                port:
                  type: integer
                  description: Port for the route (for TCP routes)
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      security:
        - bearerAuth: []

    delete:
      summary: Delete all routes in a space
      description: |
        Delete all routes within the space.
        Routes mapped to apps will be unmapped before deletion.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted - returns a job
          headers:
            Location:
              description: Location of the job
              schema:
                type: string
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/environment_variable_groups:
    get:
      summary: Get environment variable groups for a space
      description: |
        Retrieve the environment variable groups that will be applied to all apps in the space.
        This includes both the running and staging environment variable groups.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  var:
                    type: object
                    additionalProperties:
                      type: string
                    description: Combined environment variables from running and staging groups
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/staging_security_groups:
    get:
      summary: List staging security groups for a space
      description: |
        Retrieve security groups that are applied during the staging lifecycle for apps in this space.
        These include both security groups explicitly associated with the space for staging,
        and globally-enabled staging security groups.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityGroup'
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/running_security_groups:
    get:
      summary: List running security groups for a space
      description: |
        Retrieve security groups that are applied during the running lifecycle for apps in this space.
        These include both security groups explicitly associated with the space for running,
        and globally-enabled running security groups.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/SecurityGroup'
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/relationships/quota:
    get:
      summary: Get space quota relationship
      description: Retrieve the quota applied to the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      related:
                        type: object
                        properties:
                          href:
                            type: string
      security:
        - bearerAuth: []

    patch:
      summary: Update space quota relationship
      description: Apply a quota to the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    guid:
                      type: string
                      format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
      security:
        - bearerAuth: []

  /v3/spaces/{guid}/service_instances:
    get:
      summary: List service instances in a space
      description: Retrieve all service instances within the space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: query
          description: Comma-delimited list of service instance names to filter by
          schema:
            type: string
        - name: guids
          in: query
          description: Comma-delimited list of service instance guids to filter by
          schema:
            type: string
        - name: type
          in: query
          description: Filter by service instance type
          schema:
            type: string
            enum: [managed, user-provided]
        - name: service_plan_guids
          in: query
          description: Comma-delimited list of service plan guids to filter by
          schema:
            type: string
        - name: service_plan_names
          in: query
          description: Comma-delimited list of service plan names to filter by
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
        - name: include
          in: query
          description: Include related resources (service_plan, service_plan.service_offering, shared_spaces)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/ServiceInstance'
      security:
        - bearerAuth: []

components:
  schemas:
    Space:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        relationships:
          type: object
          properties:
            organization:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
            quota:
              type: object
              nullable: true
              properties:
                data:
                  type: object
                  nullable: true
        links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
            features:
              type: object
              properties:
                href:
                  type: string
                  format: uri
            organization:
              type: object
              properties:
                href:
                  type: string
                  format: uri
            apply_manifest:
              type: object
              properties:
                href:
                  type: string
                  format: uri
                method:
                  type: string
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object

    Pagination:
      type: object
      properties:
        total_results:
          type: integer
        total_pages:
          type: integer
        first:
          type: object
          properties:
            href:
              type: string
              format: uri
        last:
          type: object
          properties:
            href:
              type: string
              format: uri
        next:
          type: object
          properties:
            href:
              type: string
              format: uri
        previous:
          type: object
          nullable: true
          properties:
            href:
              type: string
              format: uri

    User:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
        presentation_name:
          type: string
        origin:
          type: string
          nullable: true
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
                  format: uri
