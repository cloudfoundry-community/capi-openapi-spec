paths:
  /v3/routes:
    get:
      summary: List routes
      description: Retrieve all routes the user has access to.
      parameters:
        - name: app_guids
          in: query
          description: Comma-delimited list of app guids to filter by
          schema:
            type: string
        - name: domain_guids
          in: query
          description: Comma-delimited list of domain guids to filter by
          schema:
            type: string
        - name: hosts
          in: query
          description: Comma-delimited list of hostnames to filter by
          schema:
            type: string
        - name: organization_guids
          in: query
          description: Comma-delimited list of organization guids to filter by
          schema:
            type: string
        - name: paths
          in: query
          description: Comma-delimited list of paths to filter by (e.g. /path1,/path2)
          schema:
            type: string
        - name: ports
          in: query
          description: Comma-delimited list of ports to filter by (e.g. 3306,5432)
          schema:
            type: string
        - name: space_guids
          in: query
          description: Comma-delimited list of space guids to filter by
          schema:
            type: string
        - name: service_instance_guids
          in: query
          description: Comma-delimited list of service instance guids to filter by
          schema:
            type: string
        - name: page
          in: query
          description: Page to display; valid values are integers >= 1
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of results per page; valid values are 1 through 5000
          schema:
            type: integer
        - name: order_by
          in: query
          description: Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at
          schema:
            type: string
        - name: label_selector
          in: query
          description: A query string containing a list of label selector requirements
          schema:
            type: string
        - name: include
          in: query
          description: Optionally include a list of unique related resources in the response. Valid values are domain, space.organization, space
          schema:
            type: string
        - name: created_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with relational operators
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    type: object
                    properties:
                      total_results:
                        type: integer
                      total_pages:
                        type: integer
                      first:
                        type: object
                        properties:
                          href:
                            type: string
                      last:
                        type: object
                        properties:
                          href:
                            type: string
                      next:
                        type: object
                        properties:
                          href:
                            type: string
                      previous:
                        type: object
                        nullable: true
                        properties:
                          href:
                            type: string
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
    post:
      summary: Create a route
      description: Create a new route.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                host:
                  type: string
                path:
                  type: string
                port:
                  type: integer
                relationships:
                  type: object
                  properties:
                    domain:
                      type: object
                      properties:
                        data:
                          type: object
                          properties:
                            guid:
                              type: string
                    space:
                      type: object
                      properties:
                        data:
                          type: object
                          properties:
                            guid:
                              type: string
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      security:
        - Admin:
          - cloud_controller.admin
        - SpaceDeveloper:
          - cloud_controller.admin
        - SpaceSupporter:
          - cloud_controller.admin
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'

  /v3/routes/{guid}:
    get:
      summary: Get a route
      description: Retrieve a route by its GUID.
      parameters:
        - name: guid
          in: path
          description: "The route GUID"
          required: true
          schema:
            type: string
        - name: include
          in: query
          description: Optionally include additional related resources in the response. Valid values are domain, space.organization, space
          schema:
            type: string
      security:
        - Admin:
          - cloud_controller.admin
        - AdminReadOnly:
          - cloud_controller.admin_read_only
        - GlobalAuditor:
          - cloud_controller.global_auditor
        - OrgManager:
          - cloud_controller.read
        - SpaceAuditor:
          - cloud_controller.read
        - SpaceDeveloper:
          - cloud_controller.read
        - SpaceManager:
          - cloud_controller.read
        - SpaceSupporter:
          - cloud_controller.read
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'

  /v3/apps/{guid}/routes:
    get:
      summary: Retrieve all routes for an app
      description: Retrieve all routes that have destinations that point to the given app.
      parameters:
        - name: guid
          in: path
          required: true
          description: The app GUID
          schema:
            type: string
        - name: domain_guids
          in: query
          description: Comma-delimited list of domain guids to filter by
          schema:
            type: array
            items:
              type: string
        - name: hosts
          in: query
          description: Comma-delimited list of hostnames to filter by
          schema:
            type: array
            items:
              type: string
        - name: organization_guids
          in: query
          description: Comma-delimited list of organization guids to filter by
          schema:
            type: array
            items:
              type: string
        - name: paths
          in: query
          description: Comma-delimited list of paths to filter by (e.g. /path1,/path2)
          schema:
            type: array
            items:
              type: string
        - name: ports
          in: query
          description: Comma-delimited list of ports to filter by (e.g. 3306,5432)
          schema:
            type: array
            items:
              type: integer
        - name: space_guids
          in: query
          description: Comma-delimited list of space guids to filter by
          schema:
            type: array
            items:
              type: string
        - name: page
          in: query
          description: Page to display; valid values are integers >= 1
          schema:
            type: integer
        - name: per_page
          in: query
          description: Number of results per page; valid values are 1 through 5000
          schema:
            type: integer
        - name: order_by
          in: query
          description: Value to sort by. Defaults to ascending; prepend with - to sort descending. Valid values are created_at, updated_at
          schema:
            type: string
        - name: label_selector
          in: query
          description: A query string containing a list of label selector requirements
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteList'
      security:
        - bearerAuth: []

  /v3/routes/{guid}/relationships/space:
    get:
      summary: Get the space relationship for a route
      description: This endpoint retrieves the space relationship for a route.
      parameters:
        - name: guid
          in: path
          required: true
          description: The guid of the route
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      related:
                        type: object
                        properties:
                          href:
                            type: string

  /v3/routes/{guid}/relationships/domain:
    get:
      summary: Get the domain relationship for a route
      description: This endpoint retrieves the domain relationship for a route.
      parameters:
        - name: guid
          in: path
          required: true
          description: The guid of the route
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      related:
                        type: object
                        properties:
                          href:
                            type: string

  /v3/routes/{guid}/destinations:
    get:
      summary: List destinations for a route
      description: Retrieve all destinations for the route.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: guids
          in: query
          description: Comma-delimited list of destination guids to filter by
          schema:
            type: string
        - name: app_guids
          in: query
          description: Comma-delimited list of app guids to filter by
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  destinations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Destination'
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      route:
                        type: object
                        properties:
                          href:
                            type: string
      security:
        - bearerAuth: []

    post:
      summary: Add destinations to a route
      description: Add one or more destinations to a route.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - destinations
              properties:
                destinations:
                  type: array
                  items:
                    type: object
                    required:
                      - app
                    properties:
                      app:
                        type: object
                        required:
                          - guid
                        properties:
                          guid:
                            type: string
                          process:
                            type: object
                            properties:
                              type:
                                type: string
                      weight:
                        type: integer
                        minimum: 1
                        maximum: 128
                      port:
                        type: integer
                        minimum: 1024
                        maximum: 65535
                      protocol:
                        type: string
                        enum: [http1, http2, tcp]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  destinations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Destination'
                  links:
                    type: object
      security:
        - bearerAuth: []

    patch:
      summary: Replace all destinations for a route
      description: Replace all destinations for a route with the provided list.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - destinations
              properties:
                destinations:
                  type: array
                  items:
                    type: object
                    required:
                      - app
                    properties:
                      app:
                        type: object
                        required:
                          - guid
                        properties:
                          guid:
                            type: string
                          process:
                            type: object
                            properties:
                              type:
                                type: string
                      weight:
                        type: integer
                        minimum: 1
                        maximum: 128
                      port:
                        type: integer
                        minimum: 1024
                        maximum: 65535
                      protocol:
                        type: string
                        enum: [http1, http2, tcp]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  destinations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Destination'
                  links:
                    type: object
      security:
        - bearerAuth: []

  /v3/routes/{guid}/destinations/{destination_guid}:
    delete:
      summary: Remove a destination from a route
      description: Remove a specific destination from a route.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: destination_guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
      security:
        - bearerAuth: []

  /v3/routes/{guid}/relationships/shared_spaces:
    get:
      summary: List shared spaces relationship
      description: Retrieve the spaces that this route is shared with (experimental).
      x-experimental: true
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                  links:
                    type: object
      security:
        - bearerAuth: []

    post:
      summary: Share a route with spaces
      description: Share this route with one or more spaces (experimental).
      x-experimental: true
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: array
                  items:
                    type: object
                    required:
                      - guid
                    properties:
                      guid:
                        type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        guid:
                          type: string
                  links:
                    type: object
      security:
        - bearerAuth: []

  /v3/routes/{guid}/relationships/shared_spaces/{space_guid}:
    delete:
      summary: Unshare a route from a space
      description: Unshare this route from a specific space (experimental).
      x-experimental: true
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: space_guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
      security:
        - bearerAuth: []

  /v3/routes/{guid}/transfer_owner:
    patch:
      summary: Transfer route ownership
      description: Transfer ownership of a route to another space.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  required:
                    - guid
                  properties:
                    guid:
                      type: string
                      description: GUID of the space to transfer ownership to
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Route'
      security:
        - bearerAuth: []


components:
  schemas:
    Route:
      type: object
      properties:
        guid:
          type: string
        protocol:
          type: string
        port:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        host:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        url:
          type: string
        destinations:
          type: array
          items:
            $ref: '#/components/schemas/Destination'
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        relationships:
          type: object
          properties:
            space:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
            domain:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
        links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: string
            space:
              type: object
              properties:
                href:
                  type: string
            domain:
              type: object
              properties:
                href:
                  type: string
            destinations:
              type: object
              properties:
                href:
                  type: string

    Destination:
      type: object
      properties:
        guid:
          type: string
        app:
          type: object
          properties:
            guid:
              type: string
            process:
              type: object
              properties:
                type:
                  type: string
        weight:
          type: integer
          nullable: true
        port:
          type: integer
        protocol:
          type: string
          nullable: true

    RouteList:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total_results:
              type: integer
            total_pages:
              type: integer
            first:
              type: object
              properties:
                href:
                  type: string
            last:
              type: object
              properties:
                href:
                  type: string
            next:
              type: object
              properties:
                href:
                  type: string
            previous:
              type: object
              nullable: true
              properties:
                href:
                  type: string
        resources:
          type: array
          items:
            $ref: '#/components/schemas/Route'
    Destination:
      type: object
      properties:
        guid:
          type: string
        app:
          type: object
          properties:
            guid:
              type: string
            process:
              type: object
              properties:
                type:
                  type: string
        weight:
          type: integer
          nullable: true
        port:
          type: integer
        protocol:
          type: string
          nullable: true

