paths:
  /v3/packages:
    get:
      summary: "List packages"
      description: "Retrieve all packages the user has access to."
      parameters:
        - name: "guids"
          in: query
          schema:
            type: array
            items:
              type: "string"
          style: form
          explode: false
          description: "Comma-delimited list of package guids to filter by"
        - name: "states"
          in: query
          schema:
            type: array
            items:
              type: "string"
          style: form
          explode: false
          description: "Comma-delimited list of package states to filter by"
        - name: "types"
          in: query
          schema:
            type: array
            items:
              type: "string"
          style: form
          explode: false
          description: "Comma-delimited list of package types to filter by"
        - name: "app_guids"
          in: query
          schema:
            type: array
            items:
              type: "string"
          style: form
          explode: false
          description: "Comma-delimited list of app guids to filter by"
        - name: "space_guids"
          in: query
          schema:
            type: array
            items:
              type: "string"
          style: form
          explode: false
          description: "Comma-delimited list of space guids to filter by"
        - name: "organization_guids"
          in: query
          schema:
            type: array
            items:
              type: "string"
          style: form
          explode: false
          description: "Comma-delimited list of organization guids to filter by"
        - name: "page"
          in: query
          schema:
            type: integer
            minimum: 1
          description: "Page to display"
        - name: "per_page"
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 5000
          description: "Number of results per page"
        - name: "order_by"
          in: query
          schema:
            type: "string"
          description: "Value to sort by; defaults to ascending. Prepend with - to sort descending. Valid values are created_at, updated_at"
        - name: "label_selector"
          in: query
          schema:
            type: "string"
          description: "A query string containing a list of label selector requirements"
        - name: "created_ats"
          in: query
          schema:
            type: array
            items:
              type: "string"
              format: date-time
          style: form
          explode: false
          description: "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators (lt[e], gt[e])"
        - name: "updated_ats"
          in: query
          schema:
            type: array
            items:
              type: "string"
              format: date-time
          style: form
          explode: false
          description: "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators (lt[e], gt[e])"
        - name: "include"
          in: query
          description: |
            Comma-delimited list of resources to include in the response.
            Supported resources:
            - app: Include the associated application
            - space: Include the space containing the package
            - space.organization: Include the organization containing the space
          schema:
            type: "string"
            example: "app,space"
        - name: "fields"
          in: query
          description: |
            Comma-delimited list of field groups to include/exclude from the response.
            Use a - (minus sign) prefix to exclude a field group.
            Example: ?fields=guid,name,-relationships.app
          schema:
            type: "string"
            example: "guid,name"
      security: []
      responses:
        '200':
          description: "A JSON array of packages."
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    type: object
                    properties:
                      total_results:
                        type: integer
                      total_pages:
                        type: integer
                      first:
                        type: object
                        properties:
                          href:
                            type: "string"
                            format: uri
                      last:
                        type: object
                        properties:
                          href:
                            type: "string"
                            format: uri
                      next:
                        type: "string"
                        nullable: true
                        format: uri
                      previous:
                        type: "string"
                        nullable: true
                        format: uri
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Package'
        'default':
          description: "An unexpected error."
    post:
      summary: "Create a package"
      description: "Create a new package."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: "string"
                  description: "Type of the package; valid values are bits, docker"
                relationships:
                  type: object
                  properties:
                    app:
                      type: object
                      properties:
                        data:
                          type: object
                          properties:
                            guid:
                              type: "string"
                              format: uuid
                              description: "GUID of the app"
                data:
                  type: object
                  properties:
                    image:
                      type: "string"
                      description: "Required when type is docker; the registry address of the image"
                    username:
                      type: "string"
                      description: "Optional when type is docker and accessing a secured registry"
                    password:
                      type: "string"
                      description: "Optional when type is docker and accessing a secured registry"
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      description: "Labels applied to the package"
                    annotations:
                      type: object
                      description: "Annotations applied to the package"
      security:
        - Admin:
          - cloud_controller.admin
        - SpaceDeveloper:
          - cloud_controller.write
      responses:
        '201':
          description: "The created package."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
        'default':
          description: "An unexpected error."
  /v3/packages/{guid}:
    get:
      summary: "Get a package"
      description: "Retrieve a package by its GUID."
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: "string"
            format: uuid
            description: "GUID of the package"
      security: []
      responses:
        '200':
          description: "A package object."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
        'default':
          description: "An unexpected error."
    patch:
      summary: "Update a package"
      description: "Update a package by its GUID."
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: "string"
            format: uuid
            description: "GUID of the package"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      description: "Labels applied to the package"
                    annotations:
                      type: object
                      description: "Annotations applied to the package"
                username:
                  type: "string"
                  description: "The username for the image's registry. Only possible for Docker package."
                password:
                  type: "string"
                  description: "The password for the image's registry. Only possible for Docker package."
      security:
      - Admin
        - cloud_controller.admin
      - SpaceDeveloper
        - cloud_controller.write
      responses:
        '200':
          description: "The updated package."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
        'default':
          description: "An unexpected error."
    delete:
      summary: "Delete a package"
      description: "Delete a package by its GUID."
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: "string"
            format: uuid
            description: "GUID of the package"
      security:
        - Admin:
          - cloud_controller.admin
        - SpaceDeveloper:
          - cloud_controller.write
      responses:
        '202':
          description: "The job to delete the package."
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: "string"
                    format: uuid
                  url:
                    type: "string"
                    format: uri
        'default':
          description: "An unexpected error."
  /v3/packages/{guid}/upload:
    post:
      summary: "Upload package bits"
      description: "Upload a new package by its GUID."
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: "string"
            format: uuid
            description: "GUID of the package"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                bits:
                  type: "string"
                  format: binary
                  description: "A binary zip file containing the package bits"
                resources:
                  type: array
                  items:
                    type: object
                    properties:
                      path:
                        type: "string"
                      size_in_bytes:
                        type: integer
                      checksum:
                        type: object
                        properties:
                          value:
                            type: "string"
      security:
        - Admin:
          - cloud_controller.admin
        - SpaceDeveloper:
          - cloud_controller.write
      responses:
        '200':
          description: "The uploaded package."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
        'default':
          description: "An unexpected error."

  /v3/packages/{guid}/download:
    get:
      summary: Download a package
      description: |
        Download the bits for a package.
        
        For bits type packages, this returns a zip file containing the source code.
        For docker type packages, this returns a JSON file containing the docker image reference.
      parameters:
        - name: guid
          in: path
          required: true
          description: The package GUID
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/zip:
              schema:
                type: string
                format: binary
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                    description: Docker image reference
        '302':
          description: Redirect to download URL
          headers:
            Location:
              description: URL to download the package
              schema:
                type: string
        '404':
          description: Not Found
      security:
        - bearerAuth: []

  /v3/packages/{guid}/upload:
    post:
      summary: Upload package bits
      description: |
        Upload bits to a package of type 'bits'.
        
        The upload must be a zip file containing the application source code.
        The maximum size is determined by the cc.packages.max_package_size configuration value.
      parameters:
        - name: guid
          in: path
          required: true
          description: The package GUID
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - bits
              properties:
                bits:
                  type: string
                  format: binary
                  description: A zip file containing the package bits
                resources:
                  type: string
                  description: |
                    JSON string of cached resources. 
                    Can be used to avoid uploading already-cached files.
                  example: '[{"fn":"path/to/file","size":1234,"sha1":"abc123"}]'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
        '422':
          description: Unprocessable Entity - Package is not of type 'bits'
      security:
        - bearerAuth: []

  /v3/packages/{guid}/builds:
    post:
      summary: Create a build from a package
      description: |
        Stage a package to create a build.
        This endpoint is used to stage a package and create a droplet.
        The package must be of type 'bits' and in the 'READY' state.
      parameters:
        - name: guid
          in: path
          required: true
          description: The package GUID
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                staging_memory_in_mb:
                  type: integer
                  description: Memory limit for staging in MB
                staging_disk_in_mb:
                  type: integer
                  description: Disk limit for staging in MB
                environment_variables:
                  type: object
                  additionalProperties:
                    type: string
                  description: Environment variables to use during staging
                lifecycle:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [buildpack, cnb, docker]
                    data:
                      type: object
                      properties:
                        buildpacks:
                          type: array
                          items:
                            type: string
                          description: List of buildpacks to use
                        stack:
                          type: string
                          description: Stack to use for staging
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                      additionalProperties:
                        type: string
                    annotations:
                      type: object
                      additionalProperties:
                        type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
        '422':
          description: Unprocessable Entity - Package not ready or invalid state
      security:
        - bearerAuth: []

  /v3/packages/{guid}/droplets:
    post:
      summary: Copy a package's droplet
      description: |
        Copy the droplet from a source package to create a new droplet.
        This is useful for copying droplets between packages or apps.
      parameters:
        - name: guid
          in: path
          required: true
          description: The package GUID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - relationships
              properties:
                relationships:
                  type: object
                  required:
                    - source_droplet
                  properties:
                    source_droplet:
                      type: object
                      required:
                        - data
                      properties:
                        data:
                          type: object
                          required:
                            - guid
                          properties:
                            guid:
                              type: string
                              format: uuid
                              description: GUID of the source droplet to copy
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Droplet'
        '422':
          description: Unprocessable Entity - Invalid source droplet
      security:
        - bearerAuth: []

components:
  schemas:
    Package:
      type: object
      required:
        - guid
        - type
        - state
        - created_at
        - updated_at
      properties:
        guid:
          type: "string"
          format: uuid
          description: "Unique identifier for the package"
        type:
          type: "string"
          description: "Package type; valid values are bits, docker"
        data:
          type: object
          properties:
            checksum:
              type: object
              properties:
                type:
                  type: "string"
                  description: "The checksum type, for example: sha256"
                value:
                  type: "string"
                  nullable: true
                  description: "The checksum value; this will be populated after bits are uploaded"
            error:
              type: "string"
              nullable: true
              description: "If an error occurs this field will contain the error message"
            image:
              type: "string"
              description: "The registry address of the image (for Docker packages)"
            username:
              type: "string"
              description: "The username for the image's registry (for Docker packages)"
            password:
              type: "string"
              description: "The password for the image's registry (for Docker packages)"
        state:
          type: "string"
          description: "State of the package; valid states are AWAITING_UPLOAD, PROCESSING_UPLOAD, READY, FAILED, COPYING, EXPIRED"
        created_at:
          type: "string"
          format: date-time
          description: "The time with zone when the object was created"
        updated_at:
          type: "string"
          format: date-time
          description: "The time with zone when the object was last updated"
        relationships:
          type: object
          properties:
            app:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: "string"
                      format: uuid
                      description: "GUID of the app"
        links:
          type: object
          properties:
            self:
              type: object
              properties:
                href:
                  type: "string"
                  format: uri
                  description: "URL of the package"
            upload:
              type: object
              properties:
                href:
                  type: "string"
                  format: uri
                  description: "URL to upload the package"
                method:
                  type: "string"
                  description: "HTTP method for the upload URL"
            download:
              type: object
              properties:
                href:
                  type: "string"
                  format: uri
                  description: "URL to download the package"
                method:
                  type: "string"
                  description: "HTTP method for the download URL"
            app:
              type: object
              properties:
                href:
                  type: "string"
                  format: uri
                  description: "URL of the app"
        metadata:
          type: object
          properties:
            labels:
              type: object
              description: "Labels applied to the package"
            annotations:
              type: object
              description: "Annotations applied to the package"

