paths:
  /v3/organizations:
    post:
      summary: Create an Organization
      operationId: createOrganization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                suspended:
                  type: boolean
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      secuity:
        - Admin:
          - cloud_controller.admin
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    get:
      summary: List Organizations
      operationId: listOrganizations
      parameters:
        - name: names
          in: query
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
        - name: created_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: created_ats[gt]=2020-01-01T00:00:00Z, created_ats[gte]=2020-01-01T00:00:00Z, created_ats[lt]=2020-01-01T00:00:00Z, created_ats[lte]=2020-01-01T00:00:00Z. Range queries: created_ats[gt]=2020-01-01T00:00:00Z&created_ats[lt]=2020-12-31T00:00:00Z
          schema:
            type: string
        - name: updated_ats
          in: query
          description: Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: updated_ats[gt]=2020-01-01T00:00:00Z, updated_ats[gte]=2020-01-01T00:00:00Z, updated_ats[lt]=2020-01-01T00:00:00Z, updated_ats[lte]=2020-01-01T00:00:00Z. Range queries: updated_ats[gt]=2020-01-01T00:00:00Z&updated_ats[lt]=2020-12-31T00:00:00Z
          schema:
            type: string
        - name: fields
          in: query
          description: Fields to include in the response. Allowed values are specified per endpoint.
          schema:
            type: string
        - name: include
          in: query
          description: |
            Comma-delimited list of resources to include in the response.
            Supported resources:
            - domains: Include private domains associated with the organization
            - default_domain: Include the default private domain if one exists
            - users: Include all users with a role in the organization
            - managers: Include organization managers
            - billing_managers: Include organization billing managers
            - auditors: Include organization auditors
          schema:
            type: string
            example: domains,users
      secuity:
        - Admin:
          - cloud_controller.admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
  /v3/organizations/{guid}:
    get:
      summary: Get an Organization
      operationId: getOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string

      security: []

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    patch:
      summary: Update an Organization
      operationId: updateOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                suspended:
                  type: boolean
                metadata:
                  type: object
                  properties:
                    labels:
                      type: object
                    annotations:
                      type: object
      secuity:
        - Admin:
          - cloud_controller.admin
        - OrgManager:
          - cloud_controller.write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    delete:
      summary: Delete an Organization
      operationId: deleteOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      secuity:
        - Admin:
          - cloud_controller.admin
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                type: object

  /v3/organizations/{guid}/relationships/default_isolation_segment:
    patch:
      summary: Assign Default Isolation Segment
      operationId: assignDefaultIsolationSegment
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
      secuity:
        - Admin:
          - cloud_controller.admin
        - OrgManager:
          - cloud_controller.write
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
    get:
      summary: Get Default Isolation Segment
      operationId: getDefaultIsolationSegment
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v3/organizations/{guid}/domains/default:
    get:
      summary: Get Default Domain
      operationId: getDefaultDomain
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v3/organizations/{guid}/usage_summary:
    get:
      summary: Get Usage Summary
      operationId: getUsageSummary
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
  /v3/organizations/{guid}/users:
    get:
      summary: List Users for an Organization
      operationId: listUsersForOrganization
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: guids
          in: query
          schema:
            type: string
        - name: usernames
          in: query
          schema:
            type: string
        - name: partial_usernames
          in: query
          schema:
            type: string
        - name: origins
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
        - name: created_ats
          in: query
          schema:
            type: string
        - name: updated_ats
          in: query
          schema:
            type: string
      security: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /v3/organizations/{guid}/domains:
    get:
      summary: List domains for an organization
      description: |
        Retrieve all domains available in the organization.
        This includes both private domains owned by the organization and shared domains.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: query
          description: Comma-delimited list of domain names to filter by
          schema:
            type: string
        - name: guids
          in: query
          description: Comma-delimited list of domain guids to filter by
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
        - name: label_selector
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Domain'
      security:
        - bearerAuth: []

  /v3/organizations/{guid}/usage_summary:
    get:
      summary: Get organization usage summary
      description: |
        Retrieve usage summary for the organization.
        This includes memory and instance usage across all spaces and apps.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  usage_summary:
                    type: object
                    properties:
                      started_instances:
                        type: integer
                        description: Number of running app instances
                      memory_in_mb:
                        type: integer
                        description: Total memory used by running instances in MB
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      organization:
                        type: object
                        properties:
                          href:
                            type: string
      security:
        - bearerAuth: []

  /v3/organizations/{guid}/relationships/quota:
    get:
      summary: Get organization quota relationship
      description: Retrieve the quota applied to the organization.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      related:
                        type: object
                        properties:
                          href:
                            type: string
      security:
        - bearerAuth: []

    patch:
      summary: Update organization quota relationship
      description: Apply a quota to the organization.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  type: object
                  nullable: true
                  properties:
                    guid:
                      type: string
                      format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    nullable: true
                    properties:
                      guid:
                        type: string
                        format: uuid
                  links:
                    type: object
      security:
        - bearerAuth: []

components:
  schemas:
    Organization:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        name:
          type: string
        suspended:
          type: boolean
        relationships:
          type: object
          properties:
            quota:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    guid:
                      type: string
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
            domains:
              type: string
              format: uri
            default_domain:
              type: string
              format: uri
            quota:
              type: string
              format: uri
    User:
      type: object
      properties:
        guid:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        username:
          type: string
        presentation_name:
          type: string
        origin:
          type: string
        metadata:
          type: object
          properties:
            labels:
              type: object
            annotations:
              type: object
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
