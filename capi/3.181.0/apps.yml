paths:
  /v3/apps:
    get:
      summary: "List apps"
      description: "Retrieve a list of all apps."
      parameters:
        - name: "page"
          in: "query"
          description: "Page number for pagination."
          required: false
          schema:
            type: "integer"
        - name: "per_page"
          in: "query"
          description: "Number of results per page."
          required: false
          schema:
            type: "integer"
        - name: "order_by"
          in: "query"
          description: "Field by which to order results."
          required: false
          schema:
            type: "string"
        - name: "names"
          in: "query"
          description: "Filter results by app names."
          required: false
          schema:
            type: "string"
        - name: "guids"
          in: "query"
          description: "Filter results by app GUIDs."
          required: false
          schema:
            type: "string"
        - name: "organization_guids"
          in: "query"
          description: "Filter results by organization GUIDs."
          required: false
          schema:
            type: "string"
        - name: "space_guids"
          in: "query"
          description: "Filter results by space GUIDs."
          required: false
          schema:
            type: "string"
        - name: "stacks"
          in: "query"
          description: "Filter results by stack names."
          required: false
          schema:
            type: "string"
        - name: "include"
          in: "query"
          description: "Include related resources in the response."
          required: false
          schema:
            type: "string"
        - name: "lifecycle_type"
          in: "query"
          description: "Filter results by lifecycle type."
          required: false
          schema:
            type: "string"
        - name: "label_selector"
          in: "query"
          description: "Filter results by label selector."
          required: false
          schema:
            type: "string"
        - name: "created_ats"
          in: "query"
          description: "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: created_ats[gt]=2020-01-01T00:00:00Z, created_ats[gte]=2020-01-01T00:00:00Z, created_ats[lt]=2020-01-01T00:00:00Z, created_ats[lte]=2020-01-01T00:00:00Z. Range queries: created_ats[gt]=2020-01-01T00:00:00Z&created_ats[lt]=2020-12-31T00:00:00Z"
          required: false
          schema:
            type: "string"
        - name: "updated_ats"
          in: "query"
          description: "Timestamp to filter by. When filtering on equality, several comma-delimited timestamps may be passed. Also supports filtering with advanced operators: [gt] (greater than), [gte] (greater than or equal to), [lt] (less than), [lte] (less than or equal to). Examples: updated_ats[gt]=2020-01-01T00:00:00Z, updated_ats[gte]=2020-01-01T00:00:00Z, updated_ats[lt]=2020-01-01T00:00:00Z, updated_ats[lte]=2020-01-01T00:00:00Z. Range queries: updated_ats[gt]=2020-01-01T00:00:00Z&updated_ats[lt]=2020-12-31T00:00:00Z"
          required: false
          schema:
            type: "string"
        - name: "fields"
          in: "query"
          description: "Fields to include in the response. Allowed values are specified per endpoint."
          required: false
          schema:
            type: "string"
      responses:
        '200':
          description: "A JSON array of apps."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        default:
          description: "An unexpected error."

    post:
      summary: "Create an app"
      description: "Create a new app."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              required:
                - "name"
                - "space_guid"
              properties:
                name:
                  type: "string"
                  description: "Name of the app."
                space_guid:
                  type: "string"
                  description: "GUID of the space."
                lifecycle:
                  type: "object"
                  description: "Lifecycle of the app."
                  properties:
                    type:
                      type: "string"
                      enum: ["buildpack", "docker"]
                      description: "Type of lifecycle."
                    data:
                      type: "object"
                      description: "Lifecycle data."
                      properties:
                        buildpacks:
                          type: "array"
                          items:
                            type: "string"
                          description: "List of buildpacks."
                environment_variables:
                  type: "object"
                  description: "Environment variables for the app."
                relationships:
                  type: "object"
                  description: "Relationships of the app."
                  properties:
                    space:
                      type: object
                      properties:
                        data:
                          type: object
                          properties:
                            guid:
                              type: string
                metadata:
                  type: "object"
                  description: "Metadata of the app."
                state:
                  type: "string"
                  enum: ["STARTED", "STOPPED"]
                  description: "Desired state of the app."
      responses:
        '201':
          description: "App created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        default:
          description: "An unexpected error."

  /v3/apps/{guid}:
    get:
      summary: "Retrieve a specific app"
      description: "Retrieve a specific app by its GUID."
      parameters:
        - name: "guid"
          in: "path"
          required: true
          description: "The GUID of the app."
          schema:
            type: "string"
        - name: "include"
          in: "query"
          description: "Include related resources in the response; valid values are space and space.organization."
          required: false
          schema:
            type: "array"
            items:
              type: "string"
              enum:
                - "space"
                - "space.organization"
      responses:
        '200':
          description: "The requested app."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
        default:
          description: "An unexpected error."
    patch:
      summary: "Update an app"
      description: "Update an existing app by its GUID."
      parameters:
        - name: "guid"
          in: "path"
          required: true
          description: "The GUID of the app."
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: "string"
                  description: "Name of the app"
                lifecycle:
                  type: "object"
                  description: "Lifecycle to be used when updating the app; note: data is a required field in lifecycle if lifecycle is updated"
                  properties:
                    type:
                      type: string
                    data:
                      type: object
                      properties:
                        buildpacks:
                          type: array
                          items:
                            type: string
                        stack:
                          type: string
                metadata:
                  type: "object"
                  properties:
                    labels:
                      type: "object"
                      description: "Labels applied to the app"
                    annotations:
                      type: "object"
                      description: "Annotations applied to the app"
      responses:
        '200':
          description: App updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/App'
      security:
        - Admin: []
        - SpaceDeveloper: []
    delete:
      summary: "Delete an app"
      description: "Delete the specified app."
      parameters:
        - name: "guid"
          in: "path"
          required: true
          description: "The GUID of the app."
          schema:
            type: "string"
      responses:
        '202':
          description: "App deletion accepted"
          headers:
            Location:
              schema:
                type: string
      security:
        - Admin: []
        - SpaceDeveloper: []


  /v3/apps/{guid}/actions/start:
    post:
      summary: Start an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                  name:
                    type: string
                  state:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  lifecycle:
                    type: object
                    properties:
                      type:
                        type: string
                      data:
                        type: object
                        properties:
                          buildpacks:
                            type: array
                            items:
                              type: string
                          stack:
                            type: string
                  relationships:
                    type: object
                    properties:
                      space:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                      current_droplet:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
      security:
        - bearerAuth: []
  /v3/apps/{guid}/actions/stop:
    post:
      summary: Stop an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                  name:
                    type: string
                  state:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  lifecycle:
                    type: object
                    properties:
                      type:
                        type: string
                      data:
                        type: object
                        properties:
                          buildpacks:
                            type: array
                            items:
                              type: string
                          stack:
                            type: string
                  relationships:
                    type: object
                    properties:
                      space:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                      current_droplet:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
      security:
        - bearerAuth: []
  /v3/apps/{guid}/actions/restart:
    post:
      summary: Restart an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                  name:
                    type: string
                  state:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  lifecycle:
                    type: object
                    properties:
                      type:
                        type: string
                      data:
                        type: object
                        properties:
                          buildpacks:
                            type: array
                            items:
                              type: string
                          stack:
                            type: string
                  relationships:
                    type: object
                    properties:
                      space:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                      current_droplet:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
      security:
        - bearerAuth: []
  /v3/apps/{guid}/actions/clear_buildpack_cache:
    post:
      summary: Clear buildpack cache for application
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Accepted response
          headers:
            Location:
              schema:
                type: string
      security:
        - bearerAuth: []

  /v3/apps/{guid}/environment_variables:
    get:
      summary: Get environment variables for an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  var:
                    type: object
                    additionalProperties:
                      type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
      security:
        - bearerAuth: []
    patch:
      summary: Update environment variables for an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                var:
                  type: object
                  additionalProperties:
                    type: string
                    nullable: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  var:
                    type: object
                    additionalProperties:
                      type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
      security:
        - bearerAuth: []

  /v3/apps/{guid}/permissions:
    get:
      summary: Get permissions for an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  read_basic_data:
                    type: boolean
                  read_sensitive_data:
                    type: boolean
      security:
        - bearerAuth: []
  /v3/apps/{guid}/ssh_enabled:
    get:
      summary: Get SSH enabled for an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  enabled:
                    type: boolean
                  reason:
                    type: string
      security:
        - bearerAuth: []

  /v3/apps/{guid}/features:
    get:
      summary: "List app features"
      description: "Retrieves the list of features for the specified app."
      parameters:
        - name: "guid"
          in: "path"
          required: true
          description: "The GUID of the app."
          schema:
            type: "string"
      responses:
        "200":
          description: "A list of app features."
        default:
          description: "An unexpected error."
      security:
        - Admin: []
        - AdminReadOnly: []
        - GlobalAuditor: []
        - OrgManager: []
        - SpaceAuditor: []
        - SpaceDeveloper: []
        - SpaceManager: []
        - SpaceSupporter: []

  /v3/apps/{guid}/features/{name}:
    get:
      summary: "Get an app feature"
      description: "Retrieves a specific feature for the specified app."
      parameters:
        - name: "guid"
          in: "path"
          required: true
          description: "The GUID of the app."
          schema:
            type: "string"
        - name: "name"
          in: "path"
          required: true
          description: "The name of the feature."
          schema:
            type: "string"
      responses:
        "200":
          description: "The app feature."
        default:
          description: "An unexpected error."
      security:
        - Admin: []
        - AdminReadOnly: []
        - GlobalAuditor: []
        - OrgManager: []
        - SpaceAuditor: []
        - SpaceDeveloper: []
        - SpaceManager: []
        - SpaceSupporter: []

    patch:
      summary: "Update an app feature"
      description: "Updates a specific feature for the specified app."
      parameters:
        - name: "guid"
          in: "path"
          required: true
          description: "The GUID of the app."
          schema:
            type: "string"
        - name: "name"
          in: "path"
          required: true
          description: "The name of the feature."
          schema:
            type: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                enabled:
                  type: "boolean"
                  description: "Denotes whether or not the app feature should be enabled"
      responses:
        "200":
          description: "The updated app feature."
        default:
          description: "An unexpected error."
      security:
        - Admin: []
        - SpaceDeveloper: []
        - SpaceSupporter: []

  /v3/apps/{guid}/droplets/current:
    get:
      summary: "Get current droplet"
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  guid:
                    type: string
                  state:
                    type: string
                  error:
                    type: string
                    nullable: true
                  lifecycle:
                    type: object
                    properties:
                      type:
                        type: string
                      data:
                        type: object
                  execution_metadata:
                    type: string
                  process_types:
                    type: object
                    additionalProperties:
                      type: string
                  checksum:
                    type: object
                    properties:
                      type:
                        type: string
                      value:
                        type: string
                  buildpacks:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        detect_output:
                          type: string
                        version:
                          type: string
                        buildpack_name:
                          type: string
                  stack:
                    type: string
                  image:
                    type: string
                    nullable: true
                  created_at:
                    type: string
                    format: date-time
                  updated_at:
                    type: string
                    format: date-time
                  relationships:
                    type: object
                    properties:
                      app:
                        type: object
                        properties:
                          data:
                            type: object
                            properties:
                              guid:
                                type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
                        method:
                          type: string
                          nullable: true
                  metadata:
                    type: object
                    properties:
                      labels:
                        type: object
                      annotations:
                        type: object
      security:
        - bearerAuth: []
  /v3/apps/{guid}/relationships/current_droplet:
    get:
      summary: Get current droplet association for an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      guid:
                        type: string
                  links:
                    type: object
                    additionalProperties:
                      type: object
                      properties:
                        href:
                          type: string
      security:
        - bearerAuth: []

  /v3/apps/{guid}/env:
    get:
      summary: Get environment for an app
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  staging_env_json:
                    type: object
                    additionalProperties:
                      type: string
                  running_env_json:
                    type: object
                    additionalProperties:
                      type: string
                  environment_variables:
                    type: object
                    additionalProperties:
                      type: string
                  system_env_json:
                    type: object
                    properties:
                      VCAP_SERVICES:
                        type: object
                        additionalProperties:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              binding_id:
                                type: string
                              binding_name:
                                type: string
                              instance_id:
                                type: string
                              instance_name:
                                type: string
                              label:
                                type: string
                              tags:
                                type: array
                                items:
                                  type: string
                              plan:
                                type: string
                              credentials:
                                type: object
                                additionalProperties:
                                  type: string
                              syslog_drain_url:
                                type: string
                              volume_mounts:
                                type: array
                                items:
                                  type: string
                              provider:
                                type: string
                                nullable: true
                  application_env_json:
                    type: object
                    properties:
                      VCAP_APPLICATION:
                        type: object
                        properties:
                          limits:
                            type: object
                            properties:
                              fds:
                                type: integer
                          application_name:
                            type: string
                          application_uris:
                            type: array
                            items:
                              type: string
                          name:
                            type: string
                          space_name:
                            type: string
                          space_id:
                            type: string
                          uris:
                            type: array
                            items:
                              type: string
                          users:
                            type: string
                            nullable: true
      security:
        - bearerAuth: []

  /v3/apps/{guid}/features/{name}:
    patch:
      summary: Update an app feature
      description: Update the specified feature for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: name
          in: path
          required: true
          schema:
            type: string
            enum: [revisions, ssh, diego_docker]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enabled:
                  type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  enabled:
                    type: boolean
      security:
        - bearerAuth: []

  /v3/apps/{guid}/sidecars:
    get:
      summary: List sidecars for an app
      description: Retrieve all sidecars associated with the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sidecar'
      security:
        - bearerAuth: []
    
    post:
      summary: Create a sidecar for an app
      description: Create a new sidecar associated with the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - command
                - process_types
              properties:
                name:
                  type: string
                command:
                  type: string
                process_types:
                  type: array
                  items:
                    type: string
                memory_in_mb:
                  type: integer
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sidecar'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/revisions:
    get:
      summary: List revisions for an app
      description: Retrieve all revisions for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: versions
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Revision'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/revisions/deployed:
    get:
      summary: List deployed revisions for an app
      description: Retrieve revisions that are currently deployed for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Revision'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/routes:
    get:
      summary: List routes for an app
      description: Retrieve all routes mapped to the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Route'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/droplets:
    get:
      summary: List droplets for an app
      description: Retrieve all droplets for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: states
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Droplet'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/packages:
    get:
      summary: List packages for an app
      description: Retrieve all packages for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: states
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Package'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes:
    get:
      summary: List processes for an app
      description: Retrieve all processes for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Process'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes/{type}:
    get:
      summary: Get a specific process for an app
      description: Retrieve a specific process type for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      security:
        - bearerAuth: []

    patch:
      summary: Update a specific process for an app
      description: Update a specific process type for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                command:
                  type: string
                  nullable: true
                health_check:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [port, process, http]
                    data:
                      type: object
                      properties:
                        timeout:
                          type: integer
                        invocation_timeout:
                          type: integer
                        endpoint:
                          type: string
                        interval:
                          type: integer
                readiness_health_check:
                  type: object
                  properties:
                    type:
                      type: string
                      enum: [port, process, http]
                    data:
                      type: object
                      properties:
                        invocation_timeout:
                          type: integer
                        endpoint:
                          type: string
                        interval:
                          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes/{type}/stats:
    get:
      summary: Get stats for a process type
      description: Retrieve resource usage statistics for all instances of a specific process type.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProcessStats'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes/{type}/actions/scale:
    post:
      summary: Scale a process type
      description: Scale the number of instances for a specific process type.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                instances:
                  type: integer
                  minimum: 0
                  description: Number of instances
                memory_in_mb:
                  type: integer
                  minimum: 1
                  description: Memory limit per instance in MB
                disk_in_mb:
                  type: integer
                  minimum: 1
                  description: Disk limit per instance in MB
                log_rate_limit_in_bytes_per_second:
                  type: integer
                  minimum: -1
                  description: Log rate limit per instance (-1 for unlimited)
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Process'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes/{type}/instances:
    get:
      summary: List instances for a process type
      description: Retrieve all instances of a specific process type for an app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProcessInstance'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/processes/{type}/sidecars:
    get:
      summary: List sidecars for a specific process type
      description: Retrieve all sidecars for a specific process type of the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Sidecar'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/tasks:
    get:
      summary: List tasks for an app
      description: Retrieve all tasks for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: names
          in: query
          schema:
            type: string
        - name: states
          in: query
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Task'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/builds:
    get:
      summary: List builds for an app
      description: Retrieve all builds for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: states
          in: query
          description: Comma-delimited list of build states to filter by
          schema:
            type: string
            example: STAGING,STAGED,FAILED
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
        - name: label_selector
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Build'
      security:
        - bearerAuth: []

  /v3/apps/{guid}/environment_variable_groups:
    get:
      summary: Get environment variable groups for an app
      description: |
        Retrieve the environment variable groups that will be applied to the app.
        This includes both running and staging environment variable groups that are
        set at the platform level and will be injected into the app's environment.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  var:
                    type: object
                    additionalProperties:
                      type: string
                    description: Combined environment variables from running and staging groups
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                      app:
                        type: object
                        properties:
                          href:
                            type: string
      security:
        - bearerAuth: []

  /v3/apps/{guid}/manifest:
    get:
      summary: Get app manifest
      description: |
        Generate a manifest for the app and its underlying processes.
        The manifest returned is a representation of the current state of the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/x-yaml:
              schema:
                type: string
                example: |
                  ---
                  applications:
                  - name: my-app
                    memory: 512M
                    instances: 2
                    disk_quota: 1024M
                    health-check-type: http
                    health-check-http-endpoint: /health
                    timeout: 60
                    env:
                      VAR1: value1
                      VAR2: value2
                    routes:
                    - route: my-app.example.com
                    - route: my-app.example.com/path
                    services:
                    - my-database
                    - my-cache
                    stack: cflinuxfs3
                    buildpacks:
                    - ruby_buildpack
                    metadata:
                      labels:
                        contact: team@example.com
                      annotations:
                        version: 1.2.3
        '404':
          description: App not found
      security:
        - bearerAuth: []

  /v3/apps/{guid}/deployments:
    get:
      summary: List deployments for an app
      description: Retrieve all deployments for the app.
      parameters:
        - name: guid
          in: path
          required: true
          schema:
            type: string
        - name: states
          in: query
          description: Comma-delimited list of deployment states to filter by
          schema:
            type: string
            example: ACTIVE,FINALIZED,CANCELING
        - name: status_values
          in: query
          description: Comma-delimited list of deployment status values to filter by
          schema:
            type: string
            example: ACTIVE,FINALIZED
        - name: status_reasons
          in: query
          description: Comma-delimited list of deployment status reasons to filter by
          schema:
            type: string
            example: DEPLOYED,CANCELED
        - name: page
          in: query
          schema:
            type: integer
        - name: per_page
          in: query
          schema:
            type: integer
        - name: order_by
          in: query
          schema:
            type: string
            enum: [created_at, -created_at, updated_at, -updated_at]
        - name: label_selector
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                  resources:
                    type: array
                    items:
                      $ref: '#/components/schemas/Deployment'
      security:
        - bearerAuth: []

components:
  schemas:
    App:
      type: "object"
      required:
        - "guid"
        - "name"
        - "state"
        - "created_at"
        - "updated_at"
        - "lifecycle"
        - "relationships"
        - "links"
        - "metadata"
      properties:
        guid:
          type: "string"
          format: "uuid"
          description: "Unique identifier for the app"
        name:
          type: "string"
          description: "Name of the app"
        state:
          type: "string"
          enum: ["STOPPED", "STARTED"]
          description: "Current desired state of the app"
        created_at:
          type: "string"
          format: "date-time"
          description: "The time with zone when the object was created"
        updated_at:
          type: "string"
          format: "date-time"
          description: "The time with zone when the object was last updated"
        lifecycle:
          type: "object"
          required:
            - "type"
            - "data"
          properties:
            type:
              type: "string"
              example: "buildpack"
            data:
              type: "object"
              properties:
                buildpacks:
                  type: "array"
                  items:
                    type: "string"
                stack:
                  type: "string"
        relationships:
          type: "object"
          required:
            - "space"
          properties:
            space:
              type: "object"
              properties:
                data:
                  type: "object"
                  properties:
                    guid:
                      type: "string"
                      format: "uuid"
            current_droplet:
              type: "object"
              properties:
                data:
                  type: "object"
                  properties:
                    guid:
                      type: "string"
                      format: "uuid"
        links:
          type: "object"
          properties:
            self:
              $ref: "#/components/schemas/Link"
            space:
              $ref: "#/components/schemas/Link"
            processes:
              $ref: "#/components/schemas/Link"
            packages:
              $ref: "#/components/schemas/Link"
            environment_variables:
              $ref: "#/components/schemas/Link"
            current_droplet:
              $ref: "#/components/schemas/Link"
            droplets:
              $ref: "#/components/schemas/Link"
            tasks:
              $ref: "#/components/schemas/Link"
            start:
              $ref: "#/components/schemas/LinkWithMethod"
            stop:
              $ref: "#/components/schemas/LinkWithMethod"
            revisions:
              $ref: "#/components/schemas/Link"
            deployed_revisions:
              $ref: "#/components/schemas/Link"
            features:
              $ref: "#/components/schemas/Link"
        metadata:
          type: "object"
          properties:
            labels:
              type: "object"
              additionalProperties:
                type: "string"
            annotations:
              type: "object"
              additionalProperties:
                type: "string"

    Link:
      type: "object"
      required:
        - "href"
      properties:
        href:
          type: "string"
          format: "uri"

    LinkWithMethod:
      allOf:
        - $ref: "#/components/schemas/Link"
        - type: "object"
          required:
            - "method"
          properties:
            method:
              type: "string"
              enum: ["GET", "POST", "PUT", "PATCH", "DELETE"]

